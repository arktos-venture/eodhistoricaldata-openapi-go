/*
eodhistoricaldata

eodhistoricaldata API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FundamentalsESGScoresActivitiesInvolvement struct for FundamentalsESGScoresActivitiesInvolvement
type FundamentalsESGScoresActivitiesInvolvement struct {
	Activity    *string `json:"Activity,omitempty"`
	Involvement *string `json:"Involvement,omitempty"`
}

// NewFundamentalsESGScoresActivitiesInvolvement instantiates a new FundamentalsESGScoresActivitiesInvolvement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundamentalsESGScoresActivitiesInvolvement() *FundamentalsESGScoresActivitiesInvolvement {
	this := FundamentalsESGScoresActivitiesInvolvement{}
	return &this
}

// NewFundamentalsESGScoresActivitiesInvolvementWithDefaults instantiates a new FundamentalsESGScoresActivitiesInvolvement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundamentalsESGScoresActivitiesInvolvementWithDefaults() *FundamentalsESGScoresActivitiesInvolvement {
	this := FundamentalsESGScoresActivitiesInvolvement{}
	return &this
}

// GetActivity returns the Activity field value if set, zero value otherwise.
func (o *FundamentalsESGScoresActivitiesInvolvement) GetActivity() string {
	if o == nil || o.Activity == nil {
		var ret string
		return ret
	}
	return *o.Activity
}

// GetActivityOk returns a tuple with the Activity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsESGScoresActivitiesInvolvement) GetActivityOk() (*string, bool) {
	if o == nil || o.Activity == nil {
		return nil, false
	}
	return o.Activity, true
}

// HasActivity returns a boolean if a field has been set.
func (o *FundamentalsESGScoresActivitiesInvolvement) HasActivity() bool {
	if o != nil && o.Activity != nil {
		return true
	}

	return false
}

// SetActivity gets a reference to the given string and assigns it to the Activity field.
func (o *FundamentalsESGScoresActivitiesInvolvement) SetActivity(v string) {
	o.Activity = &v
}

// GetInvolvement returns the Involvement field value if set, zero value otherwise.
func (o *FundamentalsESGScoresActivitiesInvolvement) GetInvolvement() string {
	if o == nil || o.Involvement == nil {
		var ret string
		return ret
	}
	return *o.Involvement
}

// GetInvolvementOk returns a tuple with the Involvement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsESGScoresActivitiesInvolvement) GetInvolvementOk() (*string, bool) {
	if o == nil || o.Involvement == nil {
		return nil, false
	}
	return o.Involvement, true
}

// HasInvolvement returns a boolean if a field has been set.
func (o *FundamentalsESGScoresActivitiesInvolvement) HasInvolvement() bool {
	if o != nil && o.Involvement != nil {
		return true
	}

	return false
}

// SetInvolvement gets a reference to the given string and assigns it to the Involvement field.
func (o *FundamentalsESGScoresActivitiesInvolvement) SetInvolvement(v string) {
	o.Involvement = &v
}

func (o FundamentalsESGScoresActivitiesInvolvement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Activity != nil {
		toSerialize["Activity"] = o.Activity
	}
	if o.Involvement != nil {
		toSerialize["Involvement"] = o.Involvement
	}
	return json.Marshal(toSerialize)
}

type NullableFundamentalsESGScoresActivitiesInvolvement struct {
	value *FundamentalsESGScoresActivitiesInvolvement
	isSet bool
}

func (v NullableFundamentalsESGScoresActivitiesInvolvement) Get() *FundamentalsESGScoresActivitiesInvolvement {
	return v.value
}

func (v *NullableFundamentalsESGScoresActivitiesInvolvement) Set(val *FundamentalsESGScoresActivitiesInvolvement) {
	v.value = val
	v.isSet = true
}

func (v NullableFundamentalsESGScoresActivitiesInvolvement) IsSet() bool {
	return v.isSet
}

func (v *NullableFundamentalsESGScoresActivitiesInvolvement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundamentalsESGScoresActivitiesInvolvement(val *FundamentalsESGScoresActivitiesInvolvement) *NullableFundamentalsESGScoresActivitiesInvolvement {
	return &NullableFundamentalsESGScoresActivitiesInvolvement{value: val, isSet: true}
}

func (v NullableFundamentalsESGScoresActivitiesInvolvement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundamentalsESGScoresActivitiesInvolvement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
