/*
 * eodhistoricaldata
 *
 * eodhistoricaldata API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CashFlow struct for CashFlow
type CashFlow struct {
	Date                                  *string        `json:"date,omitempty"`
	FilingDate                            *string        `json:"filing_date,omitempty"`
	Investments                           NullableString `json:"investments,omitempty"`
	ChangeToLiabilities                   NullableString `json:"changeToLiabilities,omitempty"`
	TotalCashflowsFromInvestingActivities NullableString `json:"totalCashflowsFromInvestingActivities,omitempty"`
	NetBorrowings                         NullableString `json:"netBorrowings,omitempty"`
	TotalCashFromFinancingActivities      NullableString `json:"totalCashFromFinancingActivities,omitempty"`
	ChangeToOperatingActivities           NullableString `json:"changeToOperatingActivities,omitempty"`
	NetIncome                             NullableString `json:"netIncome,omitempty"`
	ChangeInCash                          NullableString `json:"changeInCash,omitempty"`
	BeginPeriodCashFlow                   NullableString `json:"beginPeriodCashFlow,omitempty"`
	EndPeriodCashFlow                     NullableString `json:"endPeriodCashFlow,omitempty"`
	TotalCashFromOperatingActivities      NullableString `json:"totalCashFromOperatingActivities,omitempty"`
	Depreciation                          NullableString `json:"depreciation,omitempty"`
	OtherCashflowsFromInvestingActivities NullableString `json:"otherCashflowsFromInvestingActivities,omitempty"`
	DividendsPaid                         NullableString `json:"dividendsPaid,omitempty"`
	ChangeToInventory                     NullableString `json:"changeToInventory,omitempty"`
	ChangeToAccountReceivables            NullableString `json:"changeToAccountReceivables,omitempty"`
	SalePurchaseOfStock                   NullableString `json:"salePurchaseOfStock,omitempty"`
	OtherCashflowsFromFinancingActivities NullableString `json:"otherCashflowsFromFinancingActivities,omitempty"`
	ChangeToNetincome                     NullableString `json:"changeToNetincome,omitempty"`
	CapitalExpenditures                   NullableString `json:"capitalExpenditures,omitempty"`
	ChangeReceivables                     NullableString `json:"changeReceivables,omitempty"`
	CashFlowsOtherOperating               NullableString `json:"cashFlowsOtherOperating,omitempty"`
	ExchangeRateChanges                   NullableString `json:"exchangeRateChanges,omitempty"`
	CashAndCashEquivalentsChanges         NullableString `json:"cashAndCashEquivalentsChanges,omitempty"`
	ChangeInWorkingCapital                NullableString `json:"changeInWorkingCapital,omitempty"`
	OtherNonCashItems                     NullableString `json:"otherNonCashItems,omitempty"`
	FreeCashFlow                          NullableString `json:"freeCashFlow,omitempty"`
}

// NewCashFlow instantiates a new CashFlow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCashFlow() *CashFlow {
	this := CashFlow{}
	return &this
}

// NewCashFlowWithDefaults instantiates a new CashFlow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCashFlowWithDefaults() *CashFlow {
	this := CashFlow{}
	return &this
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *CashFlow) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashFlow) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *CashFlow) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *CashFlow) SetDate(v string) {
	o.Date = &v
}

// GetFilingDate returns the FilingDate field value if set, zero value otherwise.
func (o *CashFlow) GetFilingDate() string {
	if o == nil || o.FilingDate == nil {
		var ret string
		return ret
	}
	return *o.FilingDate
}

// GetFilingDateOk returns a tuple with the FilingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CashFlow) GetFilingDateOk() (*string, bool) {
	if o == nil || o.FilingDate == nil {
		return nil, false
	}
	return o.FilingDate, true
}

// HasFilingDate returns a boolean if a field has been set.
func (o *CashFlow) HasFilingDate() bool {
	if o != nil && o.FilingDate != nil {
		return true
	}

	return false
}

// SetFilingDate gets a reference to the given string and assigns it to the FilingDate field.
func (o *CashFlow) SetFilingDate(v string) {
	o.FilingDate = &v
}

// GetInvestments returns the Investments field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetInvestments() string {
	if o == nil || o.Investments.Get() == nil {
		var ret string
		return ret
	}
	return *o.Investments.Get()
}

// GetInvestmentsOk returns a tuple with the Investments field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetInvestmentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Investments.Get(), o.Investments.IsSet()
}

// HasInvestments returns a boolean if a field has been set.
func (o *CashFlow) HasInvestments() bool {
	if o != nil && o.Investments.IsSet() {
		return true
	}

	return false
}

// SetInvestments gets a reference to the given NullableString and assigns it to the Investments field.
func (o *CashFlow) SetInvestments(v string) {
	o.Investments.Set(&v)
}

// SetInvestmentsNil sets the value for Investments to be an explicit nil
func (o *CashFlow) SetInvestmentsNil() {
	o.Investments.Set(nil)
}

// UnsetInvestments ensures that no value is present for Investments, not even an explicit nil
func (o *CashFlow) UnsetInvestments() {
	o.Investments.Unset()
}

// GetChangeToLiabilities returns the ChangeToLiabilities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeToLiabilities() string {
	if o == nil || o.ChangeToLiabilities.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeToLiabilities.Get()
}

// GetChangeToLiabilitiesOk returns a tuple with the ChangeToLiabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeToLiabilitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeToLiabilities.Get(), o.ChangeToLiabilities.IsSet()
}

// HasChangeToLiabilities returns a boolean if a field has been set.
func (o *CashFlow) HasChangeToLiabilities() bool {
	if o != nil && o.ChangeToLiabilities.IsSet() {
		return true
	}

	return false
}

// SetChangeToLiabilities gets a reference to the given NullableString and assigns it to the ChangeToLiabilities field.
func (o *CashFlow) SetChangeToLiabilities(v string) {
	o.ChangeToLiabilities.Set(&v)
}

// SetChangeToLiabilitiesNil sets the value for ChangeToLiabilities to be an explicit nil
func (o *CashFlow) SetChangeToLiabilitiesNil() {
	o.ChangeToLiabilities.Set(nil)
}

// UnsetChangeToLiabilities ensures that no value is present for ChangeToLiabilities, not even an explicit nil
func (o *CashFlow) UnsetChangeToLiabilities() {
	o.ChangeToLiabilities.Unset()
}

// GetTotalCashflowsFromInvestingActivities returns the TotalCashflowsFromInvestingActivities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetTotalCashflowsFromInvestingActivities() string {
	if o == nil || o.TotalCashflowsFromInvestingActivities.Get() == nil {
		var ret string
		return ret
	}
	return *o.TotalCashflowsFromInvestingActivities.Get()
}

// GetTotalCashflowsFromInvestingActivitiesOk returns a tuple with the TotalCashflowsFromInvestingActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetTotalCashflowsFromInvestingActivitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCashflowsFromInvestingActivities.Get(), o.TotalCashflowsFromInvestingActivities.IsSet()
}

// HasTotalCashflowsFromInvestingActivities returns a boolean if a field has been set.
func (o *CashFlow) HasTotalCashflowsFromInvestingActivities() bool {
	if o != nil && o.TotalCashflowsFromInvestingActivities.IsSet() {
		return true
	}

	return false
}

// SetTotalCashflowsFromInvestingActivities gets a reference to the given NullableString and assigns it to the TotalCashflowsFromInvestingActivities field.
func (o *CashFlow) SetTotalCashflowsFromInvestingActivities(v string) {
	o.TotalCashflowsFromInvestingActivities.Set(&v)
}

// SetTotalCashflowsFromInvestingActivitiesNil sets the value for TotalCashflowsFromInvestingActivities to be an explicit nil
func (o *CashFlow) SetTotalCashflowsFromInvestingActivitiesNil() {
	o.TotalCashflowsFromInvestingActivities.Set(nil)
}

// UnsetTotalCashflowsFromInvestingActivities ensures that no value is present for TotalCashflowsFromInvestingActivities, not even an explicit nil
func (o *CashFlow) UnsetTotalCashflowsFromInvestingActivities() {
	o.TotalCashflowsFromInvestingActivities.Unset()
}

// GetNetBorrowings returns the NetBorrowings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetNetBorrowings() string {
	if o == nil || o.NetBorrowings.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetBorrowings.Get()
}

// GetNetBorrowingsOk returns a tuple with the NetBorrowings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetNetBorrowingsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetBorrowings.Get(), o.NetBorrowings.IsSet()
}

// HasNetBorrowings returns a boolean if a field has been set.
func (o *CashFlow) HasNetBorrowings() bool {
	if o != nil && o.NetBorrowings.IsSet() {
		return true
	}

	return false
}

// SetNetBorrowings gets a reference to the given NullableString and assigns it to the NetBorrowings field.
func (o *CashFlow) SetNetBorrowings(v string) {
	o.NetBorrowings.Set(&v)
}

// SetNetBorrowingsNil sets the value for NetBorrowings to be an explicit nil
func (o *CashFlow) SetNetBorrowingsNil() {
	o.NetBorrowings.Set(nil)
}

// UnsetNetBorrowings ensures that no value is present for NetBorrowings, not even an explicit nil
func (o *CashFlow) UnsetNetBorrowings() {
	o.NetBorrowings.Unset()
}

// GetTotalCashFromFinancingActivities returns the TotalCashFromFinancingActivities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetTotalCashFromFinancingActivities() string {
	if o == nil || o.TotalCashFromFinancingActivities.Get() == nil {
		var ret string
		return ret
	}
	return *o.TotalCashFromFinancingActivities.Get()
}

// GetTotalCashFromFinancingActivitiesOk returns a tuple with the TotalCashFromFinancingActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetTotalCashFromFinancingActivitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCashFromFinancingActivities.Get(), o.TotalCashFromFinancingActivities.IsSet()
}

// HasTotalCashFromFinancingActivities returns a boolean if a field has been set.
func (o *CashFlow) HasTotalCashFromFinancingActivities() bool {
	if o != nil && o.TotalCashFromFinancingActivities.IsSet() {
		return true
	}

	return false
}

// SetTotalCashFromFinancingActivities gets a reference to the given NullableString and assigns it to the TotalCashFromFinancingActivities field.
func (o *CashFlow) SetTotalCashFromFinancingActivities(v string) {
	o.TotalCashFromFinancingActivities.Set(&v)
}

// SetTotalCashFromFinancingActivitiesNil sets the value for TotalCashFromFinancingActivities to be an explicit nil
func (o *CashFlow) SetTotalCashFromFinancingActivitiesNil() {
	o.TotalCashFromFinancingActivities.Set(nil)
}

// UnsetTotalCashFromFinancingActivities ensures that no value is present for TotalCashFromFinancingActivities, not even an explicit nil
func (o *CashFlow) UnsetTotalCashFromFinancingActivities() {
	o.TotalCashFromFinancingActivities.Unset()
}

// GetChangeToOperatingActivities returns the ChangeToOperatingActivities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeToOperatingActivities() string {
	if o == nil || o.ChangeToOperatingActivities.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeToOperatingActivities.Get()
}

// GetChangeToOperatingActivitiesOk returns a tuple with the ChangeToOperatingActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeToOperatingActivitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeToOperatingActivities.Get(), o.ChangeToOperatingActivities.IsSet()
}

// HasChangeToOperatingActivities returns a boolean if a field has been set.
func (o *CashFlow) HasChangeToOperatingActivities() bool {
	if o != nil && o.ChangeToOperatingActivities.IsSet() {
		return true
	}

	return false
}

// SetChangeToOperatingActivities gets a reference to the given NullableString and assigns it to the ChangeToOperatingActivities field.
func (o *CashFlow) SetChangeToOperatingActivities(v string) {
	o.ChangeToOperatingActivities.Set(&v)
}

// SetChangeToOperatingActivitiesNil sets the value for ChangeToOperatingActivities to be an explicit nil
func (o *CashFlow) SetChangeToOperatingActivitiesNil() {
	o.ChangeToOperatingActivities.Set(nil)
}

// UnsetChangeToOperatingActivities ensures that no value is present for ChangeToOperatingActivities, not even an explicit nil
func (o *CashFlow) UnsetChangeToOperatingActivities() {
	o.ChangeToOperatingActivities.Unset()
}

// GetNetIncome returns the NetIncome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetNetIncome() string {
	if o == nil || o.NetIncome.Get() == nil {
		var ret string
		return ret
	}
	return *o.NetIncome.Get()
}

// GetNetIncomeOk returns a tuple with the NetIncome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetNetIncomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetIncome.Get(), o.NetIncome.IsSet()
}

// HasNetIncome returns a boolean if a field has been set.
func (o *CashFlow) HasNetIncome() bool {
	if o != nil && o.NetIncome.IsSet() {
		return true
	}

	return false
}

// SetNetIncome gets a reference to the given NullableString and assigns it to the NetIncome field.
func (o *CashFlow) SetNetIncome(v string) {
	o.NetIncome.Set(&v)
}

// SetNetIncomeNil sets the value for NetIncome to be an explicit nil
func (o *CashFlow) SetNetIncomeNil() {
	o.NetIncome.Set(nil)
}

// UnsetNetIncome ensures that no value is present for NetIncome, not even an explicit nil
func (o *CashFlow) UnsetNetIncome() {
	o.NetIncome.Unset()
}

// GetChangeInCash returns the ChangeInCash field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeInCash() string {
	if o == nil || o.ChangeInCash.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeInCash.Get()
}

// GetChangeInCashOk returns a tuple with the ChangeInCash field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeInCashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeInCash.Get(), o.ChangeInCash.IsSet()
}

// HasChangeInCash returns a boolean if a field has been set.
func (o *CashFlow) HasChangeInCash() bool {
	if o != nil && o.ChangeInCash.IsSet() {
		return true
	}

	return false
}

// SetChangeInCash gets a reference to the given NullableString and assigns it to the ChangeInCash field.
func (o *CashFlow) SetChangeInCash(v string) {
	o.ChangeInCash.Set(&v)
}

// SetChangeInCashNil sets the value for ChangeInCash to be an explicit nil
func (o *CashFlow) SetChangeInCashNil() {
	o.ChangeInCash.Set(nil)
}

// UnsetChangeInCash ensures that no value is present for ChangeInCash, not even an explicit nil
func (o *CashFlow) UnsetChangeInCash() {
	o.ChangeInCash.Unset()
}

// GetBeginPeriodCashFlow returns the BeginPeriodCashFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetBeginPeriodCashFlow() string {
	if o == nil || o.BeginPeriodCashFlow.Get() == nil {
		var ret string
		return ret
	}
	return *o.BeginPeriodCashFlow.Get()
}

// GetBeginPeriodCashFlowOk returns a tuple with the BeginPeriodCashFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetBeginPeriodCashFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BeginPeriodCashFlow.Get(), o.BeginPeriodCashFlow.IsSet()
}

// HasBeginPeriodCashFlow returns a boolean if a field has been set.
func (o *CashFlow) HasBeginPeriodCashFlow() bool {
	if o != nil && o.BeginPeriodCashFlow.IsSet() {
		return true
	}

	return false
}

// SetBeginPeriodCashFlow gets a reference to the given NullableString and assigns it to the BeginPeriodCashFlow field.
func (o *CashFlow) SetBeginPeriodCashFlow(v string) {
	o.BeginPeriodCashFlow.Set(&v)
}

// SetBeginPeriodCashFlowNil sets the value for BeginPeriodCashFlow to be an explicit nil
func (o *CashFlow) SetBeginPeriodCashFlowNil() {
	o.BeginPeriodCashFlow.Set(nil)
}

// UnsetBeginPeriodCashFlow ensures that no value is present for BeginPeriodCashFlow, not even an explicit nil
func (o *CashFlow) UnsetBeginPeriodCashFlow() {
	o.BeginPeriodCashFlow.Unset()
}

// GetEndPeriodCashFlow returns the EndPeriodCashFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetEndPeriodCashFlow() string {
	if o == nil || o.EndPeriodCashFlow.Get() == nil {
		var ret string
		return ret
	}
	return *o.EndPeriodCashFlow.Get()
}

// GetEndPeriodCashFlowOk returns a tuple with the EndPeriodCashFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetEndPeriodCashFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndPeriodCashFlow.Get(), o.EndPeriodCashFlow.IsSet()
}

// HasEndPeriodCashFlow returns a boolean if a field has been set.
func (o *CashFlow) HasEndPeriodCashFlow() bool {
	if o != nil && o.EndPeriodCashFlow.IsSet() {
		return true
	}

	return false
}

// SetEndPeriodCashFlow gets a reference to the given NullableString and assigns it to the EndPeriodCashFlow field.
func (o *CashFlow) SetEndPeriodCashFlow(v string) {
	o.EndPeriodCashFlow.Set(&v)
}

// SetEndPeriodCashFlowNil sets the value for EndPeriodCashFlow to be an explicit nil
func (o *CashFlow) SetEndPeriodCashFlowNil() {
	o.EndPeriodCashFlow.Set(nil)
}

// UnsetEndPeriodCashFlow ensures that no value is present for EndPeriodCashFlow, not even an explicit nil
func (o *CashFlow) UnsetEndPeriodCashFlow() {
	o.EndPeriodCashFlow.Unset()
}

// GetTotalCashFromOperatingActivities returns the TotalCashFromOperatingActivities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetTotalCashFromOperatingActivities() string {
	if o == nil || o.TotalCashFromOperatingActivities.Get() == nil {
		var ret string
		return ret
	}
	return *o.TotalCashFromOperatingActivities.Get()
}

// GetTotalCashFromOperatingActivitiesOk returns a tuple with the TotalCashFromOperatingActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetTotalCashFromOperatingActivitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TotalCashFromOperatingActivities.Get(), o.TotalCashFromOperatingActivities.IsSet()
}

// HasTotalCashFromOperatingActivities returns a boolean if a field has been set.
func (o *CashFlow) HasTotalCashFromOperatingActivities() bool {
	if o != nil && o.TotalCashFromOperatingActivities.IsSet() {
		return true
	}

	return false
}

// SetTotalCashFromOperatingActivities gets a reference to the given NullableString and assigns it to the TotalCashFromOperatingActivities field.
func (o *CashFlow) SetTotalCashFromOperatingActivities(v string) {
	o.TotalCashFromOperatingActivities.Set(&v)
}

// SetTotalCashFromOperatingActivitiesNil sets the value for TotalCashFromOperatingActivities to be an explicit nil
func (o *CashFlow) SetTotalCashFromOperatingActivitiesNil() {
	o.TotalCashFromOperatingActivities.Set(nil)
}

// UnsetTotalCashFromOperatingActivities ensures that no value is present for TotalCashFromOperatingActivities, not even an explicit nil
func (o *CashFlow) UnsetTotalCashFromOperatingActivities() {
	o.TotalCashFromOperatingActivities.Unset()
}

// GetDepreciation returns the Depreciation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetDepreciation() string {
	if o == nil || o.Depreciation.Get() == nil {
		var ret string
		return ret
	}
	return *o.Depreciation.Get()
}

// GetDepreciationOk returns a tuple with the Depreciation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetDepreciationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Depreciation.Get(), o.Depreciation.IsSet()
}

// HasDepreciation returns a boolean if a field has been set.
func (o *CashFlow) HasDepreciation() bool {
	if o != nil && o.Depreciation.IsSet() {
		return true
	}

	return false
}

// SetDepreciation gets a reference to the given NullableString and assigns it to the Depreciation field.
func (o *CashFlow) SetDepreciation(v string) {
	o.Depreciation.Set(&v)
}

// SetDepreciationNil sets the value for Depreciation to be an explicit nil
func (o *CashFlow) SetDepreciationNil() {
	o.Depreciation.Set(nil)
}

// UnsetDepreciation ensures that no value is present for Depreciation, not even an explicit nil
func (o *CashFlow) UnsetDepreciation() {
	o.Depreciation.Unset()
}

// GetOtherCashflowsFromInvestingActivities returns the OtherCashflowsFromInvestingActivities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetOtherCashflowsFromInvestingActivities() string {
	if o == nil || o.OtherCashflowsFromInvestingActivities.Get() == nil {
		var ret string
		return ret
	}
	return *o.OtherCashflowsFromInvestingActivities.Get()
}

// GetOtherCashflowsFromInvestingActivitiesOk returns a tuple with the OtherCashflowsFromInvestingActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetOtherCashflowsFromInvestingActivitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OtherCashflowsFromInvestingActivities.Get(), o.OtherCashflowsFromInvestingActivities.IsSet()
}

// HasOtherCashflowsFromInvestingActivities returns a boolean if a field has been set.
func (o *CashFlow) HasOtherCashflowsFromInvestingActivities() bool {
	if o != nil && o.OtherCashflowsFromInvestingActivities.IsSet() {
		return true
	}

	return false
}

// SetOtherCashflowsFromInvestingActivities gets a reference to the given NullableString and assigns it to the OtherCashflowsFromInvestingActivities field.
func (o *CashFlow) SetOtherCashflowsFromInvestingActivities(v string) {
	o.OtherCashflowsFromInvestingActivities.Set(&v)
}

// SetOtherCashflowsFromInvestingActivitiesNil sets the value for OtherCashflowsFromInvestingActivities to be an explicit nil
func (o *CashFlow) SetOtherCashflowsFromInvestingActivitiesNil() {
	o.OtherCashflowsFromInvestingActivities.Set(nil)
}

// UnsetOtherCashflowsFromInvestingActivities ensures that no value is present for OtherCashflowsFromInvestingActivities, not even an explicit nil
func (o *CashFlow) UnsetOtherCashflowsFromInvestingActivities() {
	o.OtherCashflowsFromInvestingActivities.Unset()
}

// GetDividendsPaid returns the DividendsPaid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetDividendsPaid() string {
	if o == nil || o.DividendsPaid.Get() == nil {
		var ret string
		return ret
	}
	return *o.DividendsPaid.Get()
}

// GetDividendsPaidOk returns a tuple with the DividendsPaid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetDividendsPaidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DividendsPaid.Get(), o.DividendsPaid.IsSet()
}

// HasDividendsPaid returns a boolean if a field has been set.
func (o *CashFlow) HasDividendsPaid() bool {
	if o != nil && o.DividendsPaid.IsSet() {
		return true
	}

	return false
}

// SetDividendsPaid gets a reference to the given NullableString and assigns it to the DividendsPaid field.
func (o *CashFlow) SetDividendsPaid(v string) {
	o.DividendsPaid.Set(&v)
}

// SetDividendsPaidNil sets the value for DividendsPaid to be an explicit nil
func (o *CashFlow) SetDividendsPaidNil() {
	o.DividendsPaid.Set(nil)
}

// UnsetDividendsPaid ensures that no value is present for DividendsPaid, not even an explicit nil
func (o *CashFlow) UnsetDividendsPaid() {
	o.DividendsPaid.Unset()
}

// GetChangeToInventory returns the ChangeToInventory field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeToInventory() string {
	if o == nil || o.ChangeToInventory.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeToInventory.Get()
}

// GetChangeToInventoryOk returns a tuple with the ChangeToInventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeToInventoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeToInventory.Get(), o.ChangeToInventory.IsSet()
}

// HasChangeToInventory returns a boolean if a field has been set.
func (o *CashFlow) HasChangeToInventory() bool {
	if o != nil && o.ChangeToInventory.IsSet() {
		return true
	}

	return false
}

// SetChangeToInventory gets a reference to the given NullableString and assigns it to the ChangeToInventory field.
func (o *CashFlow) SetChangeToInventory(v string) {
	o.ChangeToInventory.Set(&v)
}

// SetChangeToInventoryNil sets the value for ChangeToInventory to be an explicit nil
func (o *CashFlow) SetChangeToInventoryNil() {
	o.ChangeToInventory.Set(nil)
}

// UnsetChangeToInventory ensures that no value is present for ChangeToInventory, not even an explicit nil
func (o *CashFlow) UnsetChangeToInventory() {
	o.ChangeToInventory.Unset()
}

// GetChangeToAccountReceivables returns the ChangeToAccountReceivables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeToAccountReceivables() string {
	if o == nil || o.ChangeToAccountReceivables.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeToAccountReceivables.Get()
}

// GetChangeToAccountReceivablesOk returns a tuple with the ChangeToAccountReceivables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeToAccountReceivablesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeToAccountReceivables.Get(), o.ChangeToAccountReceivables.IsSet()
}

// HasChangeToAccountReceivables returns a boolean if a field has been set.
func (o *CashFlow) HasChangeToAccountReceivables() bool {
	if o != nil && o.ChangeToAccountReceivables.IsSet() {
		return true
	}

	return false
}

// SetChangeToAccountReceivables gets a reference to the given NullableString and assigns it to the ChangeToAccountReceivables field.
func (o *CashFlow) SetChangeToAccountReceivables(v string) {
	o.ChangeToAccountReceivables.Set(&v)
}

// SetChangeToAccountReceivablesNil sets the value for ChangeToAccountReceivables to be an explicit nil
func (o *CashFlow) SetChangeToAccountReceivablesNil() {
	o.ChangeToAccountReceivables.Set(nil)
}

// UnsetChangeToAccountReceivables ensures that no value is present for ChangeToAccountReceivables, not even an explicit nil
func (o *CashFlow) UnsetChangeToAccountReceivables() {
	o.ChangeToAccountReceivables.Unset()
}

// GetSalePurchaseOfStock returns the SalePurchaseOfStock field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetSalePurchaseOfStock() string {
	if o == nil || o.SalePurchaseOfStock.Get() == nil {
		var ret string
		return ret
	}
	return *o.SalePurchaseOfStock.Get()
}

// GetSalePurchaseOfStockOk returns a tuple with the SalePurchaseOfStock field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetSalePurchaseOfStockOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SalePurchaseOfStock.Get(), o.SalePurchaseOfStock.IsSet()
}

// HasSalePurchaseOfStock returns a boolean if a field has been set.
func (o *CashFlow) HasSalePurchaseOfStock() bool {
	if o != nil && o.SalePurchaseOfStock.IsSet() {
		return true
	}

	return false
}

// SetSalePurchaseOfStock gets a reference to the given NullableString and assigns it to the SalePurchaseOfStock field.
func (o *CashFlow) SetSalePurchaseOfStock(v string) {
	o.SalePurchaseOfStock.Set(&v)
}

// SetSalePurchaseOfStockNil sets the value for SalePurchaseOfStock to be an explicit nil
func (o *CashFlow) SetSalePurchaseOfStockNil() {
	o.SalePurchaseOfStock.Set(nil)
}

// UnsetSalePurchaseOfStock ensures that no value is present for SalePurchaseOfStock, not even an explicit nil
func (o *CashFlow) UnsetSalePurchaseOfStock() {
	o.SalePurchaseOfStock.Unset()
}

// GetOtherCashflowsFromFinancingActivities returns the OtherCashflowsFromFinancingActivities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetOtherCashflowsFromFinancingActivities() string {
	if o == nil || o.OtherCashflowsFromFinancingActivities.Get() == nil {
		var ret string
		return ret
	}
	return *o.OtherCashflowsFromFinancingActivities.Get()
}

// GetOtherCashflowsFromFinancingActivitiesOk returns a tuple with the OtherCashflowsFromFinancingActivities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetOtherCashflowsFromFinancingActivitiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OtherCashflowsFromFinancingActivities.Get(), o.OtherCashflowsFromFinancingActivities.IsSet()
}

// HasOtherCashflowsFromFinancingActivities returns a boolean if a field has been set.
func (o *CashFlow) HasOtherCashflowsFromFinancingActivities() bool {
	if o != nil && o.OtherCashflowsFromFinancingActivities.IsSet() {
		return true
	}

	return false
}

// SetOtherCashflowsFromFinancingActivities gets a reference to the given NullableString and assigns it to the OtherCashflowsFromFinancingActivities field.
func (o *CashFlow) SetOtherCashflowsFromFinancingActivities(v string) {
	o.OtherCashflowsFromFinancingActivities.Set(&v)
}

// SetOtherCashflowsFromFinancingActivitiesNil sets the value for OtherCashflowsFromFinancingActivities to be an explicit nil
func (o *CashFlow) SetOtherCashflowsFromFinancingActivitiesNil() {
	o.OtherCashflowsFromFinancingActivities.Set(nil)
}

// UnsetOtherCashflowsFromFinancingActivities ensures that no value is present for OtherCashflowsFromFinancingActivities, not even an explicit nil
func (o *CashFlow) UnsetOtherCashflowsFromFinancingActivities() {
	o.OtherCashflowsFromFinancingActivities.Unset()
}

// GetChangeToNetincome returns the ChangeToNetincome field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeToNetincome() string {
	if o == nil || o.ChangeToNetincome.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeToNetincome.Get()
}

// GetChangeToNetincomeOk returns a tuple with the ChangeToNetincome field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeToNetincomeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeToNetincome.Get(), o.ChangeToNetincome.IsSet()
}

// HasChangeToNetincome returns a boolean if a field has been set.
func (o *CashFlow) HasChangeToNetincome() bool {
	if o != nil && o.ChangeToNetincome.IsSet() {
		return true
	}

	return false
}

// SetChangeToNetincome gets a reference to the given NullableString and assigns it to the ChangeToNetincome field.
func (o *CashFlow) SetChangeToNetincome(v string) {
	o.ChangeToNetincome.Set(&v)
}

// SetChangeToNetincomeNil sets the value for ChangeToNetincome to be an explicit nil
func (o *CashFlow) SetChangeToNetincomeNil() {
	o.ChangeToNetincome.Set(nil)
}

// UnsetChangeToNetincome ensures that no value is present for ChangeToNetincome, not even an explicit nil
func (o *CashFlow) UnsetChangeToNetincome() {
	o.ChangeToNetincome.Unset()
}

// GetCapitalExpenditures returns the CapitalExpenditures field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetCapitalExpenditures() string {
	if o == nil || o.CapitalExpenditures.Get() == nil {
		var ret string
		return ret
	}
	return *o.CapitalExpenditures.Get()
}

// GetCapitalExpendituresOk returns a tuple with the CapitalExpenditures field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetCapitalExpendituresOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CapitalExpenditures.Get(), o.CapitalExpenditures.IsSet()
}

// HasCapitalExpenditures returns a boolean if a field has been set.
func (o *CashFlow) HasCapitalExpenditures() bool {
	if o != nil && o.CapitalExpenditures.IsSet() {
		return true
	}

	return false
}

// SetCapitalExpenditures gets a reference to the given NullableString and assigns it to the CapitalExpenditures field.
func (o *CashFlow) SetCapitalExpenditures(v string) {
	o.CapitalExpenditures.Set(&v)
}

// SetCapitalExpendituresNil sets the value for CapitalExpenditures to be an explicit nil
func (o *CashFlow) SetCapitalExpendituresNil() {
	o.CapitalExpenditures.Set(nil)
}

// UnsetCapitalExpenditures ensures that no value is present for CapitalExpenditures, not even an explicit nil
func (o *CashFlow) UnsetCapitalExpenditures() {
	o.CapitalExpenditures.Unset()
}

// GetChangeReceivables returns the ChangeReceivables field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeReceivables() string {
	if o == nil || o.ChangeReceivables.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeReceivables.Get()
}

// GetChangeReceivablesOk returns a tuple with the ChangeReceivables field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeReceivablesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeReceivables.Get(), o.ChangeReceivables.IsSet()
}

// HasChangeReceivables returns a boolean if a field has been set.
func (o *CashFlow) HasChangeReceivables() bool {
	if o != nil && o.ChangeReceivables.IsSet() {
		return true
	}

	return false
}

// SetChangeReceivables gets a reference to the given NullableString and assigns it to the ChangeReceivables field.
func (o *CashFlow) SetChangeReceivables(v string) {
	o.ChangeReceivables.Set(&v)
}

// SetChangeReceivablesNil sets the value for ChangeReceivables to be an explicit nil
func (o *CashFlow) SetChangeReceivablesNil() {
	o.ChangeReceivables.Set(nil)
}

// UnsetChangeReceivables ensures that no value is present for ChangeReceivables, not even an explicit nil
func (o *CashFlow) UnsetChangeReceivables() {
	o.ChangeReceivables.Unset()
}

// GetCashFlowsOtherOperating returns the CashFlowsOtherOperating field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetCashFlowsOtherOperating() string {
	if o == nil || o.CashFlowsOtherOperating.Get() == nil {
		var ret string
		return ret
	}
	return *o.CashFlowsOtherOperating.Get()
}

// GetCashFlowsOtherOperatingOk returns a tuple with the CashFlowsOtherOperating field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetCashFlowsOtherOperatingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CashFlowsOtherOperating.Get(), o.CashFlowsOtherOperating.IsSet()
}

// HasCashFlowsOtherOperating returns a boolean if a field has been set.
func (o *CashFlow) HasCashFlowsOtherOperating() bool {
	if o != nil && o.CashFlowsOtherOperating.IsSet() {
		return true
	}

	return false
}

// SetCashFlowsOtherOperating gets a reference to the given NullableString and assigns it to the CashFlowsOtherOperating field.
func (o *CashFlow) SetCashFlowsOtherOperating(v string) {
	o.CashFlowsOtherOperating.Set(&v)
}

// SetCashFlowsOtherOperatingNil sets the value for CashFlowsOtherOperating to be an explicit nil
func (o *CashFlow) SetCashFlowsOtherOperatingNil() {
	o.CashFlowsOtherOperating.Set(nil)
}

// UnsetCashFlowsOtherOperating ensures that no value is present for CashFlowsOtherOperating, not even an explicit nil
func (o *CashFlow) UnsetCashFlowsOtherOperating() {
	o.CashFlowsOtherOperating.Unset()
}

// GetExchangeRateChanges returns the ExchangeRateChanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetExchangeRateChanges() string {
	if o == nil || o.ExchangeRateChanges.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExchangeRateChanges.Get()
}

// GetExchangeRateChangesOk returns a tuple with the ExchangeRateChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetExchangeRateChangesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExchangeRateChanges.Get(), o.ExchangeRateChanges.IsSet()
}

// HasExchangeRateChanges returns a boolean if a field has been set.
func (o *CashFlow) HasExchangeRateChanges() bool {
	if o != nil && o.ExchangeRateChanges.IsSet() {
		return true
	}

	return false
}

// SetExchangeRateChanges gets a reference to the given NullableString and assigns it to the ExchangeRateChanges field.
func (o *CashFlow) SetExchangeRateChanges(v string) {
	o.ExchangeRateChanges.Set(&v)
}

// SetExchangeRateChangesNil sets the value for ExchangeRateChanges to be an explicit nil
func (o *CashFlow) SetExchangeRateChangesNil() {
	o.ExchangeRateChanges.Set(nil)
}

// UnsetExchangeRateChanges ensures that no value is present for ExchangeRateChanges, not even an explicit nil
func (o *CashFlow) UnsetExchangeRateChanges() {
	o.ExchangeRateChanges.Unset()
}

// GetCashAndCashEquivalentsChanges returns the CashAndCashEquivalentsChanges field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetCashAndCashEquivalentsChanges() string {
	if o == nil || o.CashAndCashEquivalentsChanges.Get() == nil {
		var ret string
		return ret
	}
	return *o.CashAndCashEquivalentsChanges.Get()
}

// GetCashAndCashEquivalentsChangesOk returns a tuple with the CashAndCashEquivalentsChanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetCashAndCashEquivalentsChangesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CashAndCashEquivalentsChanges.Get(), o.CashAndCashEquivalentsChanges.IsSet()
}

// HasCashAndCashEquivalentsChanges returns a boolean if a field has been set.
func (o *CashFlow) HasCashAndCashEquivalentsChanges() bool {
	if o != nil && o.CashAndCashEquivalentsChanges.IsSet() {
		return true
	}

	return false
}

// SetCashAndCashEquivalentsChanges gets a reference to the given NullableString and assigns it to the CashAndCashEquivalentsChanges field.
func (o *CashFlow) SetCashAndCashEquivalentsChanges(v string) {
	o.CashAndCashEquivalentsChanges.Set(&v)
}

// SetCashAndCashEquivalentsChangesNil sets the value for CashAndCashEquivalentsChanges to be an explicit nil
func (o *CashFlow) SetCashAndCashEquivalentsChangesNil() {
	o.CashAndCashEquivalentsChanges.Set(nil)
}

// UnsetCashAndCashEquivalentsChanges ensures that no value is present for CashAndCashEquivalentsChanges, not even an explicit nil
func (o *CashFlow) UnsetCashAndCashEquivalentsChanges() {
	o.CashAndCashEquivalentsChanges.Unset()
}

// GetChangeInWorkingCapital returns the ChangeInWorkingCapital field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetChangeInWorkingCapital() string {
	if o == nil || o.ChangeInWorkingCapital.Get() == nil {
		var ret string
		return ret
	}
	return *o.ChangeInWorkingCapital.Get()
}

// GetChangeInWorkingCapitalOk returns a tuple with the ChangeInWorkingCapital field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetChangeInWorkingCapitalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ChangeInWorkingCapital.Get(), o.ChangeInWorkingCapital.IsSet()
}

// HasChangeInWorkingCapital returns a boolean if a field has been set.
func (o *CashFlow) HasChangeInWorkingCapital() bool {
	if o != nil && o.ChangeInWorkingCapital.IsSet() {
		return true
	}

	return false
}

// SetChangeInWorkingCapital gets a reference to the given NullableString and assigns it to the ChangeInWorkingCapital field.
func (o *CashFlow) SetChangeInWorkingCapital(v string) {
	o.ChangeInWorkingCapital.Set(&v)
}

// SetChangeInWorkingCapitalNil sets the value for ChangeInWorkingCapital to be an explicit nil
func (o *CashFlow) SetChangeInWorkingCapitalNil() {
	o.ChangeInWorkingCapital.Set(nil)
}

// UnsetChangeInWorkingCapital ensures that no value is present for ChangeInWorkingCapital, not even an explicit nil
func (o *CashFlow) UnsetChangeInWorkingCapital() {
	o.ChangeInWorkingCapital.Unset()
}

// GetOtherNonCashItems returns the OtherNonCashItems field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetOtherNonCashItems() string {
	if o == nil || o.OtherNonCashItems.Get() == nil {
		var ret string
		return ret
	}
	return *o.OtherNonCashItems.Get()
}

// GetOtherNonCashItemsOk returns a tuple with the OtherNonCashItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetOtherNonCashItemsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OtherNonCashItems.Get(), o.OtherNonCashItems.IsSet()
}

// HasOtherNonCashItems returns a boolean if a field has been set.
func (o *CashFlow) HasOtherNonCashItems() bool {
	if o != nil && o.OtherNonCashItems.IsSet() {
		return true
	}

	return false
}

// SetOtherNonCashItems gets a reference to the given NullableString and assigns it to the OtherNonCashItems field.
func (o *CashFlow) SetOtherNonCashItems(v string) {
	o.OtherNonCashItems.Set(&v)
}

// SetOtherNonCashItemsNil sets the value for OtherNonCashItems to be an explicit nil
func (o *CashFlow) SetOtherNonCashItemsNil() {
	o.OtherNonCashItems.Set(nil)
}

// UnsetOtherNonCashItems ensures that no value is present for OtherNonCashItems, not even an explicit nil
func (o *CashFlow) UnsetOtherNonCashItems() {
	o.OtherNonCashItems.Unset()
}

// GetFreeCashFlow returns the FreeCashFlow field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CashFlow) GetFreeCashFlow() string {
	if o == nil || o.FreeCashFlow.Get() == nil {
		var ret string
		return ret
	}
	return *o.FreeCashFlow.Get()
}

// GetFreeCashFlowOk returns a tuple with the FreeCashFlow field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CashFlow) GetFreeCashFlowOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreeCashFlow.Get(), o.FreeCashFlow.IsSet()
}

// HasFreeCashFlow returns a boolean if a field has been set.
func (o *CashFlow) HasFreeCashFlow() bool {
	if o != nil && o.FreeCashFlow.IsSet() {
		return true
	}

	return false
}

// SetFreeCashFlow gets a reference to the given NullableString and assigns it to the FreeCashFlow field.
func (o *CashFlow) SetFreeCashFlow(v string) {
	o.FreeCashFlow.Set(&v)
}

// SetFreeCashFlowNil sets the value for FreeCashFlow to be an explicit nil
func (o *CashFlow) SetFreeCashFlowNil() {
	o.FreeCashFlow.Set(nil)
}

// UnsetFreeCashFlow ensures that no value is present for FreeCashFlow, not even an explicit nil
func (o *CashFlow) UnsetFreeCashFlow() {
	o.FreeCashFlow.Unset()
}

func (o CashFlow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	if o.FilingDate != nil {
		toSerialize["filing_date"] = o.FilingDate
	}
	if o.Investments.IsSet() {
		toSerialize["investments"] = o.Investments.Get()
	}
	if o.ChangeToLiabilities.IsSet() {
		toSerialize["changeToLiabilities"] = o.ChangeToLiabilities.Get()
	}
	if o.TotalCashflowsFromInvestingActivities.IsSet() {
		toSerialize["totalCashflowsFromInvestingActivities"] = o.TotalCashflowsFromInvestingActivities.Get()
	}
	if o.NetBorrowings.IsSet() {
		toSerialize["netBorrowings"] = o.NetBorrowings.Get()
	}
	if o.TotalCashFromFinancingActivities.IsSet() {
		toSerialize["totalCashFromFinancingActivities"] = o.TotalCashFromFinancingActivities.Get()
	}
	if o.ChangeToOperatingActivities.IsSet() {
		toSerialize["changeToOperatingActivities"] = o.ChangeToOperatingActivities.Get()
	}
	if o.NetIncome.IsSet() {
		toSerialize["netIncome"] = o.NetIncome.Get()
	}
	if o.ChangeInCash.IsSet() {
		toSerialize["changeInCash"] = o.ChangeInCash.Get()
	}
	if o.BeginPeriodCashFlow.IsSet() {
		toSerialize["beginPeriodCashFlow"] = o.BeginPeriodCashFlow.Get()
	}
	if o.EndPeriodCashFlow.IsSet() {
		toSerialize["endPeriodCashFlow"] = o.EndPeriodCashFlow.Get()
	}
	if o.TotalCashFromOperatingActivities.IsSet() {
		toSerialize["totalCashFromOperatingActivities"] = o.TotalCashFromOperatingActivities.Get()
	}
	if o.Depreciation.IsSet() {
		toSerialize["depreciation"] = o.Depreciation.Get()
	}
	if o.OtherCashflowsFromInvestingActivities.IsSet() {
		toSerialize["otherCashflowsFromInvestingActivities"] = o.OtherCashflowsFromInvestingActivities.Get()
	}
	if o.DividendsPaid.IsSet() {
		toSerialize["dividendsPaid"] = o.DividendsPaid.Get()
	}
	if o.ChangeToInventory.IsSet() {
		toSerialize["changeToInventory"] = o.ChangeToInventory.Get()
	}
	if o.ChangeToAccountReceivables.IsSet() {
		toSerialize["changeToAccountReceivables"] = o.ChangeToAccountReceivables.Get()
	}
	if o.SalePurchaseOfStock.IsSet() {
		toSerialize["salePurchaseOfStock"] = o.SalePurchaseOfStock.Get()
	}
	if o.OtherCashflowsFromFinancingActivities.IsSet() {
		toSerialize["otherCashflowsFromFinancingActivities"] = o.OtherCashflowsFromFinancingActivities.Get()
	}
	if o.ChangeToNetincome.IsSet() {
		toSerialize["changeToNetincome"] = o.ChangeToNetincome.Get()
	}
	if o.CapitalExpenditures.IsSet() {
		toSerialize["capitalExpenditures"] = o.CapitalExpenditures.Get()
	}
	if o.ChangeReceivables.IsSet() {
		toSerialize["changeReceivables"] = o.ChangeReceivables.Get()
	}
	if o.CashFlowsOtherOperating.IsSet() {
		toSerialize["cashFlowsOtherOperating"] = o.CashFlowsOtherOperating.Get()
	}
	if o.ExchangeRateChanges.IsSet() {
		toSerialize["exchangeRateChanges"] = o.ExchangeRateChanges.Get()
	}
	if o.CashAndCashEquivalentsChanges.IsSet() {
		toSerialize["cashAndCashEquivalentsChanges"] = o.CashAndCashEquivalentsChanges.Get()
	}
	if o.ChangeInWorkingCapital.IsSet() {
		toSerialize["changeInWorkingCapital"] = o.ChangeInWorkingCapital.Get()
	}
	if o.OtherNonCashItems.IsSet() {
		toSerialize["otherNonCashItems"] = o.OtherNonCashItems.Get()
	}
	if o.FreeCashFlow.IsSet() {
		toSerialize["freeCashFlow"] = o.FreeCashFlow.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCashFlow struct {
	value *CashFlow
	isSet bool
}

func (v NullableCashFlow) Get() *CashFlow {
	return v.value
}

func (v *NullableCashFlow) Set(val *CashFlow) {
	v.value = val
	v.isSet = true
}

func (v NullableCashFlow) IsSet() bool {
	return v.isSet
}

func (v *NullableCashFlow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCashFlow(val *CashFlow) *NullableCashFlow {
	return &NullableCashFlow{value: val, isSet: true}
}

func (v NullableCashFlow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCashFlow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
