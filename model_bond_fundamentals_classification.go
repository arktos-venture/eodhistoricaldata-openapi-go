/*
eodhistoricaldata

eodhistoricaldata API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BondFundamentalsClassification struct for BondFundamentalsClassification
type BondFundamentalsClassification struct {
	BondType            *string `json:"BondType,omitempty"`
	DebtType            *string `json:"DebtType,omitempty"`
	IndustryGroup       *string `json:"IndustryGroup,omitempty"`
	IndustrySubGroup    *string `json:"IndustrySubGroup,omitempty"`
	SubProductAsset     *string `json:"SubProductAsset,omitempty"`
	SubProductAssetType *string `json:"SubProductAssetType,omitempty"`
}

// NewBondFundamentalsClassification instantiates a new BondFundamentalsClassification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBondFundamentalsClassification() *BondFundamentalsClassification {
	this := BondFundamentalsClassification{}
	return &this
}

// NewBondFundamentalsClassificationWithDefaults instantiates a new BondFundamentalsClassification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBondFundamentalsClassificationWithDefaults() *BondFundamentalsClassification {
	this := BondFundamentalsClassification{}
	return &this
}

// GetBondType returns the BondType field value if set, zero value otherwise.
func (o *BondFundamentalsClassification) GetBondType() string {
	if o == nil || o.BondType == nil {
		var ret string
		return ret
	}
	return *o.BondType
}

// GetBondTypeOk returns a tuple with the BondType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsClassification) GetBondTypeOk() (*string, bool) {
	if o == nil || o.BondType == nil {
		return nil, false
	}
	return o.BondType, true
}

// HasBondType returns a boolean if a field has been set.
func (o *BondFundamentalsClassification) HasBondType() bool {
	if o != nil && o.BondType != nil {
		return true
	}

	return false
}

// SetBondType gets a reference to the given string and assigns it to the BondType field.
func (o *BondFundamentalsClassification) SetBondType(v string) {
	o.BondType = &v
}

// GetDebtType returns the DebtType field value if set, zero value otherwise.
func (o *BondFundamentalsClassification) GetDebtType() string {
	if o == nil || o.DebtType == nil {
		var ret string
		return ret
	}
	return *o.DebtType
}

// GetDebtTypeOk returns a tuple with the DebtType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsClassification) GetDebtTypeOk() (*string, bool) {
	if o == nil || o.DebtType == nil {
		return nil, false
	}
	return o.DebtType, true
}

// HasDebtType returns a boolean if a field has been set.
func (o *BondFundamentalsClassification) HasDebtType() bool {
	if o != nil && o.DebtType != nil {
		return true
	}

	return false
}

// SetDebtType gets a reference to the given string and assigns it to the DebtType field.
func (o *BondFundamentalsClassification) SetDebtType(v string) {
	o.DebtType = &v
}

// GetIndustryGroup returns the IndustryGroup field value if set, zero value otherwise.
func (o *BondFundamentalsClassification) GetIndustryGroup() string {
	if o == nil || o.IndustryGroup == nil {
		var ret string
		return ret
	}
	return *o.IndustryGroup
}

// GetIndustryGroupOk returns a tuple with the IndustryGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsClassification) GetIndustryGroupOk() (*string, bool) {
	if o == nil || o.IndustryGroup == nil {
		return nil, false
	}
	return o.IndustryGroup, true
}

// HasIndustryGroup returns a boolean if a field has been set.
func (o *BondFundamentalsClassification) HasIndustryGroup() bool {
	if o != nil && o.IndustryGroup != nil {
		return true
	}

	return false
}

// SetIndustryGroup gets a reference to the given string and assigns it to the IndustryGroup field.
func (o *BondFundamentalsClassification) SetIndustryGroup(v string) {
	o.IndustryGroup = &v
}

// GetIndustrySubGroup returns the IndustrySubGroup field value if set, zero value otherwise.
func (o *BondFundamentalsClassification) GetIndustrySubGroup() string {
	if o == nil || o.IndustrySubGroup == nil {
		var ret string
		return ret
	}
	return *o.IndustrySubGroup
}

// GetIndustrySubGroupOk returns a tuple with the IndustrySubGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsClassification) GetIndustrySubGroupOk() (*string, bool) {
	if o == nil || o.IndustrySubGroup == nil {
		return nil, false
	}
	return o.IndustrySubGroup, true
}

// HasIndustrySubGroup returns a boolean if a field has been set.
func (o *BondFundamentalsClassification) HasIndustrySubGroup() bool {
	if o != nil && o.IndustrySubGroup != nil {
		return true
	}

	return false
}

// SetIndustrySubGroup gets a reference to the given string and assigns it to the IndustrySubGroup field.
func (o *BondFundamentalsClassification) SetIndustrySubGroup(v string) {
	o.IndustrySubGroup = &v
}

// GetSubProductAsset returns the SubProductAsset field value if set, zero value otherwise.
func (o *BondFundamentalsClassification) GetSubProductAsset() string {
	if o == nil || o.SubProductAsset == nil {
		var ret string
		return ret
	}
	return *o.SubProductAsset
}

// GetSubProductAssetOk returns a tuple with the SubProductAsset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsClassification) GetSubProductAssetOk() (*string, bool) {
	if o == nil || o.SubProductAsset == nil {
		return nil, false
	}
	return o.SubProductAsset, true
}

// HasSubProductAsset returns a boolean if a field has been set.
func (o *BondFundamentalsClassification) HasSubProductAsset() bool {
	if o != nil && o.SubProductAsset != nil {
		return true
	}

	return false
}

// SetSubProductAsset gets a reference to the given string and assigns it to the SubProductAsset field.
func (o *BondFundamentalsClassification) SetSubProductAsset(v string) {
	o.SubProductAsset = &v
}

// GetSubProductAssetType returns the SubProductAssetType field value if set, zero value otherwise.
func (o *BondFundamentalsClassification) GetSubProductAssetType() string {
	if o == nil || o.SubProductAssetType == nil {
		var ret string
		return ret
	}
	return *o.SubProductAssetType
}

// GetSubProductAssetTypeOk returns a tuple with the SubProductAssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsClassification) GetSubProductAssetTypeOk() (*string, bool) {
	if o == nil || o.SubProductAssetType == nil {
		return nil, false
	}
	return o.SubProductAssetType, true
}

// HasSubProductAssetType returns a boolean if a field has been set.
func (o *BondFundamentalsClassification) HasSubProductAssetType() bool {
	if o != nil && o.SubProductAssetType != nil {
		return true
	}

	return false
}

// SetSubProductAssetType gets a reference to the given string and assigns it to the SubProductAssetType field.
func (o *BondFundamentalsClassification) SetSubProductAssetType(v string) {
	o.SubProductAssetType = &v
}

func (o BondFundamentalsClassification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BondType != nil {
		toSerialize["BondType"] = o.BondType
	}
	if o.DebtType != nil {
		toSerialize["DebtType"] = o.DebtType
	}
	if o.IndustryGroup != nil {
		toSerialize["IndustryGroup"] = o.IndustryGroup
	}
	if o.IndustrySubGroup != nil {
		toSerialize["IndustrySubGroup"] = o.IndustrySubGroup
	}
	if o.SubProductAsset != nil {
		toSerialize["SubProductAsset"] = o.SubProductAsset
	}
	if o.SubProductAssetType != nil {
		toSerialize["SubProductAssetType"] = o.SubProductAssetType
	}
	return json.Marshal(toSerialize)
}

type NullableBondFundamentalsClassification struct {
	value *BondFundamentalsClassification
	isSet bool
}

func (v NullableBondFundamentalsClassification) Get() *BondFundamentalsClassification {
	return v.value
}

func (v *NullableBondFundamentalsClassification) Set(val *BondFundamentalsClassification) {
	v.value = val
	v.isSet = true
}

func (v NullableBondFundamentalsClassification) IsSet() bool {
	return v.isSet
}

func (v *NullableBondFundamentalsClassification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBondFundamentalsClassification(val *BondFundamentalsClassification) *NullableBondFundamentalsClassification {
	return &NullableBondFundamentalsClassification{value: val, isSet: true}
}

func (v NullableBondFundamentalsClassification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBondFundamentalsClassification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
