/*
 * eodhistoricaldata
 *
 * eodhistoricaldata API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FundamentalsGeneral struct for FundamentalsGeneral
type FundamentalsGeneral struct {
	Code                  *string                                 `json:"Code,omitempty"`
	Type                  *string                                 `json:"Type,omitempty"`
	Name                  *string                                 `json:"Name,omitempty"`
	Exchange              *string                                 `json:"Exchange,omitempty"`
	CurrencyCode          *string                                 `json:"CurrencyCode,omitempty"`
	CurrencyName          *string                                 `json:"CurrencyName,omitempty"`
	CurrencySymbol        *string                                 `json:"CurrencySymbol,omitempty"`
	CountryName           *string                                 `json:"CountryName,omitempty"`
	CountryISO            *string                                 `json:"CountryISO,omitempty"`
	ISIN                  *string                                 `json:"ISIN,omitempty"`
	CUSIP                 *string                                 `json:"CUSIP,omitempty"`
	CIK                   *string                                 `json:"CIK,omitempty"`
	EmployerIdNumber      *string                                 `json:"EmployerIdNumber,omitempty"`
	FiscalYearEnd         *string                                 `json:"FiscalYearEnd,omitempty"`
	IPODate               *string                                 `json:"IPODate,omitempty"`
	InternationalDomestic *string                                 `json:"InternationalDomestic,omitempty"`
	Sector                *string                                 `json:"Sector,omitempty"`
	Industry              *string                                 `json:"Industry,omitempty"`
	GicSector             *string                                 `json:"GicSector,omitempty"`
	GicGroup              *string                                 `json:"GicGroup,omitempty"`
	GicIndustry           *string                                 `json:"GicIndustry,omitempty"`
	GicSubIndustry        *string                                 `json:"GicSubIndustry,omitempty"`
	HomeCategory          *string                                 `json:"HomeCategory,omitempty"`
	IsDelisted            *bool                                   `json:"IsDelisted,omitempty"`
	Description           *string                                 `json:"Description,omitempty"`
	Address               *string                                 `json:"Address,omitempty"`
	AddressData           *FundamentalsGeneralAddressData         `json:"AddressData,omitempty"`
	Listings              *map[string]FundamentalsGeneralListings `json:"Listings,omitempty"`
	Officers              *map[string]FundamentalsGeneralOfficers `json:"Officers,omitempty"`
	Phone                 *string                                 `json:"Phone,omitempty"`
	WebURL                *string                                 `json:"WebURL,omitempty"`
	LogoURL               *string                                 `json:"LogoURL,omitempty"`
	FullTimeEmployees     *int64                                  `json:"FullTimeEmployees,omitempty"`
	UpdatedAt             *string                                 `json:"UpdatedAt,omitempty"`
}

// NewFundamentalsGeneral instantiates a new FundamentalsGeneral object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundamentalsGeneral() *FundamentalsGeneral {
	this := FundamentalsGeneral{}
	return &this
}

// NewFundamentalsGeneralWithDefaults instantiates a new FundamentalsGeneral object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundamentalsGeneralWithDefaults() *FundamentalsGeneral {
	this := FundamentalsGeneral{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *FundamentalsGeneral) SetCode(v string) {
	o.Code = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *FundamentalsGeneral) SetType(v string) {
	o.Type = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FundamentalsGeneral) SetName(v string) {
	o.Name = &v
}

// GetExchange returns the Exchange field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetExchange() string {
	if o == nil || o.Exchange == nil {
		var ret string
		return ret
	}
	return *o.Exchange
}

// GetExchangeOk returns a tuple with the Exchange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetExchangeOk() (*string, bool) {
	if o == nil || o.Exchange == nil {
		return nil, false
	}
	return o.Exchange, true
}

// HasExchange returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasExchange() bool {
	if o != nil && o.Exchange != nil {
		return true
	}

	return false
}

// SetExchange gets a reference to the given string and assigns it to the Exchange field.
func (o *FundamentalsGeneral) SetExchange(v string) {
	o.Exchange = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCurrencyCode() string {
	if o == nil || o.CurrencyCode == nil {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || o.CurrencyCode == nil {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCurrencyCode() bool {
	if o != nil && o.CurrencyCode != nil {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *FundamentalsGeneral) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCurrencyName returns the CurrencyName field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCurrencyName() string {
	if o == nil || o.CurrencyName == nil {
		var ret string
		return ret
	}
	return *o.CurrencyName
}

// GetCurrencyNameOk returns a tuple with the CurrencyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCurrencyNameOk() (*string, bool) {
	if o == nil || o.CurrencyName == nil {
		return nil, false
	}
	return o.CurrencyName, true
}

// HasCurrencyName returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCurrencyName() bool {
	if o != nil && o.CurrencyName != nil {
		return true
	}

	return false
}

// SetCurrencyName gets a reference to the given string and assigns it to the CurrencyName field.
func (o *FundamentalsGeneral) SetCurrencyName(v string) {
	o.CurrencyName = &v
}

// GetCurrencySymbol returns the CurrencySymbol field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCurrencySymbol() string {
	if o == nil || o.CurrencySymbol == nil {
		var ret string
		return ret
	}
	return *o.CurrencySymbol
}

// GetCurrencySymbolOk returns a tuple with the CurrencySymbol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCurrencySymbolOk() (*string, bool) {
	if o == nil || o.CurrencySymbol == nil {
		return nil, false
	}
	return o.CurrencySymbol, true
}

// HasCurrencySymbol returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCurrencySymbol() bool {
	if o != nil && o.CurrencySymbol != nil {
		return true
	}

	return false
}

// SetCurrencySymbol gets a reference to the given string and assigns it to the CurrencySymbol field.
func (o *FundamentalsGeneral) SetCurrencySymbol(v string) {
	o.CurrencySymbol = &v
}

// GetCountryName returns the CountryName field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCountryName() string {
	if o == nil || o.CountryName == nil {
		var ret string
		return ret
	}
	return *o.CountryName
}

// GetCountryNameOk returns a tuple with the CountryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCountryNameOk() (*string, bool) {
	if o == nil || o.CountryName == nil {
		return nil, false
	}
	return o.CountryName, true
}

// HasCountryName returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCountryName() bool {
	if o != nil && o.CountryName != nil {
		return true
	}

	return false
}

// SetCountryName gets a reference to the given string and assigns it to the CountryName field.
func (o *FundamentalsGeneral) SetCountryName(v string) {
	o.CountryName = &v
}

// GetCountryISO returns the CountryISO field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCountryISO() string {
	if o == nil || o.CountryISO == nil {
		var ret string
		return ret
	}
	return *o.CountryISO
}

// GetCountryISOOk returns a tuple with the CountryISO field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCountryISOOk() (*string, bool) {
	if o == nil || o.CountryISO == nil {
		return nil, false
	}
	return o.CountryISO, true
}

// HasCountryISO returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCountryISO() bool {
	if o != nil && o.CountryISO != nil {
		return true
	}

	return false
}

// SetCountryISO gets a reference to the given string and assigns it to the CountryISO field.
func (o *FundamentalsGeneral) SetCountryISO(v string) {
	o.CountryISO = &v
}

// GetISIN returns the ISIN field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetISIN() string {
	if o == nil || o.ISIN == nil {
		var ret string
		return ret
	}
	return *o.ISIN
}

// GetISINOk returns a tuple with the ISIN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetISINOk() (*string, bool) {
	if o == nil || o.ISIN == nil {
		return nil, false
	}
	return o.ISIN, true
}

// HasISIN returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasISIN() bool {
	if o != nil && o.ISIN != nil {
		return true
	}

	return false
}

// SetISIN gets a reference to the given string and assigns it to the ISIN field.
func (o *FundamentalsGeneral) SetISIN(v string) {
	o.ISIN = &v
}

// GetCUSIP returns the CUSIP field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCUSIP() string {
	if o == nil || o.CUSIP == nil {
		var ret string
		return ret
	}
	return *o.CUSIP
}

// GetCUSIPOk returns a tuple with the CUSIP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCUSIPOk() (*string, bool) {
	if o == nil || o.CUSIP == nil {
		return nil, false
	}
	return o.CUSIP, true
}

// HasCUSIP returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCUSIP() bool {
	if o != nil && o.CUSIP != nil {
		return true
	}

	return false
}

// SetCUSIP gets a reference to the given string and assigns it to the CUSIP field.
func (o *FundamentalsGeneral) SetCUSIP(v string) {
	o.CUSIP = &v
}

// GetCIK returns the CIK field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetCIK() string {
	if o == nil || o.CIK == nil {
		var ret string
		return ret
	}
	return *o.CIK
}

// GetCIKOk returns a tuple with the CIK field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetCIKOk() (*string, bool) {
	if o == nil || o.CIK == nil {
		return nil, false
	}
	return o.CIK, true
}

// HasCIK returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasCIK() bool {
	if o != nil && o.CIK != nil {
		return true
	}

	return false
}

// SetCIK gets a reference to the given string and assigns it to the CIK field.
func (o *FundamentalsGeneral) SetCIK(v string) {
	o.CIK = &v
}

// GetEmployerIdNumber returns the EmployerIdNumber field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetEmployerIdNumber() string {
	if o == nil || o.EmployerIdNumber == nil {
		var ret string
		return ret
	}
	return *o.EmployerIdNumber
}

// GetEmployerIdNumberOk returns a tuple with the EmployerIdNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetEmployerIdNumberOk() (*string, bool) {
	if o == nil || o.EmployerIdNumber == nil {
		return nil, false
	}
	return o.EmployerIdNumber, true
}

// HasEmployerIdNumber returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasEmployerIdNumber() bool {
	if o != nil && o.EmployerIdNumber != nil {
		return true
	}

	return false
}

// SetEmployerIdNumber gets a reference to the given string and assigns it to the EmployerIdNumber field.
func (o *FundamentalsGeneral) SetEmployerIdNumber(v string) {
	o.EmployerIdNumber = &v
}

// GetFiscalYearEnd returns the FiscalYearEnd field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetFiscalYearEnd() string {
	if o == nil || o.FiscalYearEnd == nil {
		var ret string
		return ret
	}
	return *o.FiscalYearEnd
}

// GetFiscalYearEndOk returns a tuple with the FiscalYearEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetFiscalYearEndOk() (*string, bool) {
	if o == nil || o.FiscalYearEnd == nil {
		return nil, false
	}
	return o.FiscalYearEnd, true
}

// HasFiscalYearEnd returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasFiscalYearEnd() bool {
	if o != nil && o.FiscalYearEnd != nil {
		return true
	}

	return false
}

// SetFiscalYearEnd gets a reference to the given string and assigns it to the FiscalYearEnd field.
func (o *FundamentalsGeneral) SetFiscalYearEnd(v string) {
	o.FiscalYearEnd = &v
}

// GetIPODate returns the IPODate field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetIPODate() string {
	if o == nil || o.IPODate == nil {
		var ret string
		return ret
	}
	return *o.IPODate
}

// GetIPODateOk returns a tuple with the IPODate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetIPODateOk() (*string, bool) {
	if o == nil || o.IPODate == nil {
		return nil, false
	}
	return o.IPODate, true
}

// HasIPODate returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasIPODate() bool {
	if o != nil && o.IPODate != nil {
		return true
	}

	return false
}

// SetIPODate gets a reference to the given string and assigns it to the IPODate field.
func (o *FundamentalsGeneral) SetIPODate(v string) {
	o.IPODate = &v
}

// GetInternationalDomestic returns the InternationalDomestic field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetInternationalDomestic() string {
	if o == nil || o.InternationalDomestic == nil {
		var ret string
		return ret
	}
	return *o.InternationalDomestic
}

// GetInternationalDomesticOk returns a tuple with the InternationalDomestic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetInternationalDomesticOk() (*string, bool) {
	if o == nil || o.InternationalDomestic == nil {
		return nil, false
	}
	return o.InternationalDomestic, true
}

// HasInternationalDomestic returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasInternationalDomestic() bool {
	if o != nil && o.InternationalDomestic != nil {
		return true
	}

	return false
}

// SetInternationalDomestic gets a reference to the given string and assigns it to the InternationalDomestic field.
func (o *FundamentalsGeneral) SetInternationalDomestic(v string) {
	o.InternationalDomestic = &v
}

// GetSector returns the Sector field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetSector() string {
	if o == nil || o.Sector == nil {
		var ret string
		return ret
	}
	return *o.Sector
}

// GetSectorOk returns a tuple with the Sector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetSectorOk() (*string, bool) {
	if o == nil || o.Sector == nil {
		return nil, false
	}
	return o.Sector, true
}

// HasSector returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasSector() bool {
	if o != nil && o.Sector != nil {
		return true
	}

	return false
}

// SetSector gets a reference to the given string and assigns it to the Sector field.
func (o *FundamentalsGeneral) SetSector(v string) {
	o.Sector = &v
}

// GetIndustry returns the Industry field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetIndustry() string {
	if o == nil || o.Industry == nil {
		var ret string
		return ret
	}
	return *o.Industry
}

// GetIndustryOk returns a tuple with the Industry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetIndustryOk() (*string, bool) {
	if o == nil || o.Industry == nil {
		return nil, false
	}
	return o.Industry, true
}

// HasIndustry returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasIndustry() bool {
	if o != nil && o.Industry != nil {
		return true
	}

	return false
}

// SetIndustry gets a reference to the given string and assigns it to the Industry field.
func (o *FundamentalsGeneral) SetIndustry(v string) {
	o.Industry = &v
}

// GetGicSector returns the GicSector field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetGicSector() string {
	if o == nil || o.GicSector == nil {
		var ret string
		return ret
	}
	return *o.GicSector
}

// GetGicSectorOk returns a tuple with the GicSector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetGicSectorOk() (*string, bool) {
	if o == nil || o.GicSector == nil {
		return nil, false
	}
	return o.GicSector, true
}

// HasGicSector returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasGicSector() bool {
	if o != nil && o.GicSector != nil {
		return true
	}

	return false
}

// SetGicSector gets a reference to the given string and assigns it to the GicSector field.
func (o *FundamentalsGeneral) SetGicSector(v string) {
	o.GicSector = &v
}

// GetGicGroup returns the GicGroup field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetGicGroup() string {
	if o == nil || o.GicGroup == nil {
		var ret string
		return ret
	}
	return *o.GicGroup
}

// GetGicGroupOk returns a tuple with the GicGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetGicGroupOk() (*string, bool) {
	if o == nil || o.GicGroup == nil {
		return nil, false
	}
	return o.GicGroup, true
}

// HasGicGroup returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasGicGroup() bool {
	if o != nil && o.GicGroup != nil {
		return true
	}

	return false
}

// SetGicGroup gets a reference to the given string and assigns it to the GicGroup field.
func (o *FundamentalsGeneral) SetGicGroup(v string) {
	o.GicGroup = &v
}

// GetGicIndustry returns the GicIndustry field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetGicIndustry() string {
	if o == nil || o.GicIndustry == nil {
		var ret string
		return ret
	}
	return *o.GicIndustry
}

// GetGicIndustryOk returns a tuple with the GicIndustry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetGicIndustryOk() (*string, bool) {
	if o == nil || o.GicIndustry == nil {
		return nil, false
	}
	return o.GicIndustry, true
}

// HasGicIndustry returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasGicIndustry() bool {
	if o != nil && o.GicIndustry != nil {
		return true
	}

	return false
}

// SetGicIndustry gets a reference to the given string and assigns it to the GicIndustry field.
func (o *FundamentalsGeneral) SetGicIndustry(v string) {
	o.GicIndustry = &v
}

// GetGicSubIndustry returns the GicSubIndustry field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetGicSubIndustry() string {
	if o == nil || o.GicSubIndustry == nil {
		var ret string
		return ret
	}
	return *o.GicSubIndustry
}

// GetGicSubIndustryOk returns a tuple with the GicSubIndustry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetGicSubIndustryOk() (*string, bool) {
	if o == nil || o.GicSubIndustry == nil {
		return nil, false
	}
	return o.GicSubIndustry, true
}

// HasGicSubIndustry returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasGicSubIndustry() bool {
	if o != nil && o.GicSubIndustry != nil {
		return true
	}

	return false
}

// SetGicSubIndustry gets a reference to the given string and assigns it to the GicSubIndustry field.
func (o *FundamentalsGeneral) SetGicSubIndustry(v string) {
	o.GicSubIndustry = &v
}

// GetHomeCategory returns the HomeCategory field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetHomeCategory() string {
	if o == nil || o.HomeCategory == nil {
		var ret string
		return ret
	}
	return *o.HomeCategory
}

// GetHomeCategoryOk returns a tuple with the HomeCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetHomeCategoryOk() (*string, bool) {
	if o == nil || o.HomeCategory == nil {
		return nil, false
	}
	return o.HomeCategory, true
}

// HasHomeCategory returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasHomeCategory() bool {
	if o != nil && o.HomeCategory != nil {
		return true
	}

	return false
}

// SetHomeCategory gets a reference to the given string and assigns it to the HomeCategory field.
func (o *FundamentalsGeneral) SetHomeCategory(v string) {
	o.HomeCategory = &v
}

// GetIsDelisted returns the IsDelisted field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetIsDelisted() bool {
	if o == nil || o.IsDelisted == nil {
		var ret bool
		return ret
	}
	return *o.IsDelisted
}

// GetIsDelistedOk returns a tuple with the IsDelisted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetIsDelistedOk() (*bool, bool) {
	if o == nil || o.IsDelisted == nil {
		return nil, false
	}
	return o.IsDelisted, true
}

// HasIsDelisted returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasIsDelisted() bool {
	if o != nil && o.IsDelisted != nil {
		return true
	}

	return false
}

// SetIsDelisted gets a reference to the given bool and assigns it to the IsDelisted field.
func (o *FundamentalsGeneral) SetIsDelisted(v bool) {
	o.IsDelisted = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FundamentalsGeneral) SetDescription(v string) {
	o.Description = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *FundamentalsGeneral) SetAddress(v string) {
	o.Address = &v
}

// GetAddressData returns the AddressData field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetAddressData() FundamentalsGeneralAddressData {
	if o == nil || o.AddressData == nil {
		var ret FundamentalsGeneralAddressData
		return ret
	}
	return *o.AddressData
}

// GetAddressDataOk returns a tuple with the AddressData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetAddressDataOk() (*FundamentalsGeneralAddressData, bool) {
	if o == nil || o.AddressData == nil {
		return nil, false
	}
	return o.AddressData, true
}

// HasAddressData returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasAddressData() bool {
	if o != nil && o.AddressData != nil {
		return true
	}

	return false
}

// SetAddressData gets a reference to the given FundamentalsGeneralAddressData and assigns it to the AddressData field.
func (o *FundamentalsGeneral) SetAddressData(v FundamentalsGeneralAddressData) {
	o.AddressData = &v
}

// GetListings returns the Listings field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetListings() map[string]FundamentalsGeneralListings {
	if o == nil || o.Listings == nil {
		var ret map[string]FundamentalsGeneralListings
		return ret
	}
	return *o.Listings
}

// GetListingsOk returns a tuple with the Listings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetListingsOk() (*map[string]FundamentalsGeneralListings, bool) {
	if o == nil || o.Listings == nil {
		return nil, false
	}
	return o.Listings, true
}

// HasListings returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasListings() bool {
	if o != nil && o.Listings != nil {
		return true
	}

	return false
}

// SetListings gets a reference to the given map[string]FundamentalsGeneralListings and assigns it to the Listings field.
func (o *FundamentalsGeneral) SetListings(v map[string]FundamentalsGeneralListings) {
	o.Listings = &v
}

// GetOfficers returns the Officers field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetOfficers() map[string]FundamentalsGeneralOfficers {
	if o == nil || o.Officers == nil {
		var ret map[string]FundamentalsGeneralOfficers
		return ret
	}
	return *o.Officers
}

// GetOfficersOk returns a tuple with the Officers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetOfficersOk() (*map[string]FundamentalsGeneralOfficers, bool) {
	if o == nil || o.Officers == nil {
		return nil, false
	}
	return o.Officers, true
}

// HasOfficers returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasOfficers() bool {
	if o != nil && o.Officers != nil {
		return true
	}

	return false
}

// SetOfficers gets a reference to the given map[string]FundamentalsGeneralOfficers and assigns it to the Officers field.
func (o *FundamentalsGeneral) SetOfficers(v map[string]FundamentalsGeneralOfficers) {
	o.Officers = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *FundamentalsGeneral) SetPhone(v string) {
	o.Phone = &v
}

// GetWebURL returns the WebURL field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetWebURL() string {
	if o == nil || o.WebURL == nil {
		var ret string
		return ret
	}
	return *o.WebURL
}

// GetWebURLOk returns a tuple with the WebURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetWebURLOk() (*string, bool) {
	if o == nil || o.WebURL == nil {
		return nil, false
	}
	return o.WebURL, true
}

// HasWebURL returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasWebURL() bool {
	if o != nil && o.WebURL != nil {
		return true
	}

	return false
}

// SetWebURL gets a reference to the given string and assigns it to the WebURL field.
func (o *FundamentalsGeneral) SetWebURL(v string) {
	o.WebURL = &v
}

// GetLogoURL returns the LogoURL field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetLogoURL() string {
	if o == nil || o.LogoURL == nil {
		var ret string
		return ret
	}
	return *o.LogoURL
}

// GetLogoURLOk returns a tuple with the LogoURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetLogoURLOk() (*string, bool) {
	if o == nil || o.LogoURL == nil {
		return nil, false
	}
	return o.LogoURL, true
}

// HasLogoURL returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasLogoURL() bool {
	if o != nil && o.LogoURL != nil {
		return true
	}

	return false
}

// SetLogoURL gets a reference to the given string and assigns it to the LogoURL field.
func (o *FundamentalsGeneral) SetLogoURL(v string) {
	o.LogoURL = &v
}

// GetFullTimeEmployees returns the FullTimeEmployees field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetFullTimeEmployees() int64 {
	if o == nil || o.FullTimeEmployees == nil {
		var ret int64
		return ret
	}
	return *o.FullTimeEmployees
}

// GetFullTimeEmployeesOk returns a tuple with the FullTimeEmployees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetFullTimeEmployeesOk() (*int64, bool) {
	if o == nil || o.FullTimeEmployees == nil {
		return nil, false
	}
	return o.FullTimeEmployees, true
}

// HasFullTimeEmployees returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasFullTimeEmployees() bool {
	if o != nil && o.FullTimeEmployees != nil {
		return true
	}

	return false
}

// SetFullTimeEmployees gets a reference to the given int64 and assigns it to the FullTimeEmployees field.
func (o *FundamentalsGeneral) SetFullTimeEmployees(v int64) {
	o.FullTimeEmployees = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FundamentalsGeneral) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsGeneral) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FundamentalsGeneral) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *FundamentalsGeneral) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o FundamentalsGeneral) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["Code"] = o.Code
	}
	if o.Type != nil {
		toSerialize["Type"] = o.Type
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Exchange != nil {
		toSerialize["Exchange"] = o.Exchange
	}
	if o.CurrencyCode != nil {
		toSerialize["CurrencyCode"] = o.CurrencyCode
	}
	if o.CurrencyName != nil {
		toSerialize["CurrencyName"] = o.CurrencyName
	}
	if o.CurrencySymbol != nil {
		toSerialize["CurrencySymbol"] = o.CurrencySymbol
	}
	if o.CountryName != nil {
		toSerialize["CountryName"] = o.CountryName
	}
	if o.CountryISO != nil {
		toSerialize["CountryISO"] = o.CountryISO
	}
	if o.ISIN != nil {
		toSerialize["ISIN"] = o.ISIN
	}
	if o.CUSIP != nil {
		toSerialize["CUSIP"] = o.CUSIP
	}
	if o.CIK != nil {
		toSerialize["CIK"] = o.CIK
	}
	if o.EmployerIdNumber != nil {
		toSerialize["EmployerIdNumber"] = o.EmployerIdNumber
	}
	if o.FiscalYearEnd != nil {
		toSerialize["FiscalYearEnd"] = o.FiscalYearEnd
	}
	if o.IPODate != nil {
		toSerialize["IPODate"] = o.IPODate
	}
	if o.InternationalDomestic != nil {
		toSerialize["InternationalDomestic"] = o.InternationalDomestic
	}
	if o.Sector != nil {
		toSerialize["Sector"] = o.Sector
	}
	if o.Industry != nil {
		toSerialize["Industry"] = o.Industry
	}
	if o.GicSector != nil {
		toSerialize["GicSector"] = o.GicSector
	}
	if o.GicGroup != nil {
		toSerialize["GicGroup"] = o.GicGroup
	}
	if o.GicIndustry != nil {
		toSerialize["GicIndustry"] = o.GicIndustry
	}
	if o.GicSubIndustry != nil {
		toSerialize["GicSubIndustry"] = o.GicSubIndustry
	}
	if o.HomeCategory != nil {
		toSerialize["HomeCategory"] = o.HomeCategory
	}
	if o.IsDelisted != nil {
		toSerialize["IsDelisted"] = o.IsDelisted
	}
	if o.Description != nil {
		toSerialize["Description"] = o.Description
	}
	if o.Address != nil {
		toSerialize["Address"] = o.Address
	}
	if o.AddressData != nil {
		toSerialize["AddressData"] = o.AddressData
	}
	if o.Listings != nil {
		toSerialize["Listings"] = o.Listings
	}
	if o.Officers != nil {
		toSerialize["Officers"] = o.Officers
	}
	if o.Phone != nil {
		toSerialize["Phone"] = o.Phone
	}
	if o.WebURL != nil {
		toSerialize["WebURL"] = o.WebURL
	}
	if o.LogoURL != nil {
		toSerialize["LogoURL"] = o.LogoURL
	}
	if o.FullTimeEmployees != nil {
		toSerialize["FullTimeEmployees"] = o.FullTimeEmployees
	}
	if o.UpdatedAt != nil {
		toSerialize["UpdatedAt"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableFundamentalsGeneral struct {
	value *FundamentalsGeneral
	isSet bool
}

func (v NullableFundamentalsGeneral) Get() *FundamentalsGeneral {
	return v.value
}

func (v *NullableFundamentalsGeneral) Set(val *FundamentalsGeneral) {
	v.value = val
	v.isSet = true
}

func (v NullableFundamentalsGeneral) IsSet() bool {
	return v.isSet
}

func (v *NullableFundamentalsGeneral) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundamentalsGeneral(val *FundamentalsGeneral) *NullableFundamentalsGeneral {
	return &NullableFundamentalsGeneral{value: val, isSet: true}
}

func (v NullableFundamentalsGeneral) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundamentalsGeneral) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
