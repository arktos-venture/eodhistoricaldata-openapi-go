/*
eodhistoricaldata

eodhistoricaldata API

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FundamentalsHighlights struct for FundamentalsHighlights
type FundamentalsHighlights struct {
	MarketCapitalization       *float64 `json:"MarketCapitalization,omitempty"`
	MarketCapitalizationMln    *float64 `json:"MarketCapitalizationMln,omitempty"`
	EBITDA                     *float64 `json:"EBITDA,omitempty"`
	PERatio                    *float64 `json:"PERatio,omitempty"`
	PEGRatio                   *float64 `json:"PEGRatio,omitempty"`
	WallStreetTargetPrice      *float64 `json:"WallStreetTargetPrice,omitempty"`
	BookValue                  *float64 `json:"BookValue,omitempty"`
	DividendShare              *float64 `json:"DividendShare,omitempty"`
	DividendYield              *float64 `json:"DividendYield,omitempty"`
	EarningsShare              *float64 `json:"EarningsShare,omitempty"`
	EPSEstimateCurrentYear     *float64 `json:"EPSEstimateCurrentYear,omitempty"`
	EPSEstimateNextYear        *float64 `json:"EPSEstimateNextYear,omitempty"`
	EPSEstimateNextQuarter     *float64 `json:"EPSEstimateNextQuarter,omitempty"`
	EPSEstimateCurrentQuarter  *float64 `json:"EPSEstimateCurrentQuarter,omitempty"`
	MostRecentQuarter          *string  `json:"MostRecentQuarter,omitempty"`
	ProfitMargin               *float64 `json:"ProfitMargin,omitempty"`
	OperatingMarginTTM         *float64 `json:"OperatingMarginTTM,omitempty"`
	ReturnOnAssetsTTM          *float64 `json:"ReturnOnAssetsTTM,omitempty"`
	ReturnOnEquityTTM          *float64 `json:"ReturnOnEquityTTM,omitempty"`
	RevenueTTM                 *float64 `json:"RevenueTTM,omitempty"`
	RevenuePerShareTTM         *float64 `json:"RevenuePerShareTTM,omitempty"`
	QuarterlyRevenueGrowthYOY  *float64 `json:"QuarterlyRevenueGrowthYOY,omitempty"`
	GrossProfitTTM             *float64 `json:"GrossProfitTTM,omitempty"`
	DilutedEpsTTM              *float64 `json:"DilutedEpsTTM,omitempty"`
	QuarterlyEarningsGrowthYOY *float64 `json:"QuarterlyEarningsGrowthYOY,omitempty"`
}

// NewFundamentalsHighlights instantiates a new FundamentalsHighlights object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFundamentalsHighlights() *FundamentalsHighlights {
	this := FundamentalsHighlights{}
	return &this
}

// NewFundamentalsHighlightsWithDefaults instantiates a new FundamentalsHighlights object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFundamentalsHighlightsWithDefaults() *FundamentalsHighlights {
	this := FundamentalsHighlights{}
	return &this
}

// GetMarketCapitalization returns the MarketCapitalization field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetMarketCapitalization() float64 {
	if o == nil || o.MarketCapitalization == nil {
		var ret float64
		return ret
	}
	return *o.MarketCapitalization
}

// GetMarketCapitalizationOk returns a tuple with the MarketCapitalization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetMarketCapitalizationOk() (*float64, bool) {
	if o == nil || o.MarketCapitalization == nil {
		return nil, false
	}
	return o.MarketCapitalization, true
}

// HasMarketCapitalization returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasMarketCapitalization() bool {
	if o != nil && o.MarketCapitalization != nil {
		return true
	}

	return false
}

// SetMarketCapitalization gets a reference to the given float64 and assigns it to the MarketCapitalization field.
func (o *FundamentalsHighlights) SetMarketCapitalization(v float64) {
	o.MarketCapitalization = &v
}

// GetMarketCapitalizationMln returns the MarketCapitalizationMln field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetMarketCapitalizationMln() float64 {
	if o == nil || o.MarketCapitalizationMln == nil {
		var ret float64
		return ret
	}
	return *o.MarketCapitalizationMln
}

// GetMarketCapitalizationMlnOk returns a tuple with the MarketCapitalizationMln field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetMarketCapitalizationMlnOk() (*float64, bool) {
	if o == nil || o.MarketCapitalizationMln == nil {
		return nil, false
	}
	return o.MarketCapitalizationMln, true
}

// HasMarketCapitalizationMln returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasMarketCapitalizationMln() bool {
	if o != nil && o.MarketCapitalizationMln != nil {
		return true
	}

	return false
}

// SetMarketCapitalizationMln gets a reference to the given float64 and assigns it to the MarketCapitalizationMln field.
func (o *FundamentalsHighlights) SetMarketCapitalizationMln(v float64) {
	o.MarketCapitalizationMln = &v
}

// GetEBITDA returns the EBITDA field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetEBITDA() float64 {
	if o == nil || o.EBITDA == nil {
		var ret float64
		return ret
	}
	return *o.EBITDA
}

// GetEBITDAOk returns a tuple with the EBITDA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetEBITDAOk() (*float64, bool) {
	if o == nil || o.EBITDA == nil {
		return nil, false
	}
	return o.EBITDA, true
}

// HasEBITDA returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasEBITDA() bool {
	if o != nil && o.EBITDA != nil {
		return true
	}

	return false
}

// SetEBITDA gets a reference to the given float64 and assigns it to the EBITDA field.
func (o *FundamentalsHighlights) SetEBITDA(v float64) {
	o.EBITDA = &v
}

// GetPERatio returns the PERatio field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetPERatio() float64 {
	if o == nil || o.PERatio == nil {
		var ret float64
		return ret
	}
	return *o.PERatio
}

// GetPERatioOk returns a tuple with the PERatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetPERatioOk() (*float64, bool) {
	if o == nil || o.PERatio == nil {
		return nil, false
	}
	return o.PERatio, true
}

// HasPERatio returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasPERatio() bool {
	if o != nil && o.PERatio != nil {
		return true
	}

	return false
}

// SetPERatio gets a reference to the given float64 and assigns it to the PERatio field.
func (o *FundamentalsHighlights) SetPERatio(v float64) {
	o.PERatio = &v
}

// GetPEGRatio returns the PEGRatio field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetPEGRatio() float64 {
	if o == nil || o.PEGRatio == nil {
		var ret float64
		return ret
	}
	return *o.PEGRatio
}

// GetPEGRatioOk returns a tuple with the PEGRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetPEGRatioOk() (*float64, bool) {
	if o == nil || o.PEGRatio == nil {
		return nil, false
	}
	return o.PEGRatio, true
}

// HasPEGRatio returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasPEGRatio() bool {
	if o != nil && o.PEGRatio != nil {
		return true
	}

	return false
}

// SetPEGRatio gets a reference to the given float64 and assigns it to the PEGRatio field.
func (o *FundamentalsHighlights) SetPEGRatio(v float64) {
	o.PEGRatio = &v
}

// GetWallStreetTargetPrice returns the WallStreetTargetPrice field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetWallStreetTargetPrice() float64 {
	if o == nil || o.WallStreetTargetPrice == nil {
		var ret float64
		return ret
	}
	return *o.WallStreetTargetPrice
}

// GetWallStreetTargetPriceOk returns a tuple with the WallStreetTargetPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetWallStreetTargetPriceOk() (*float64, bool) {
	if o == nil || o.WallStreetTargetPrice == nil {
		return nil, false
	}
	return o.WallStreetTargetPrice, true
}

// HasWallStreetTargetPrice returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasWallStreetTargetPrice() bool {
	if o != nil && o.WallStreetTargetPrice != nil {
		return true
	}

	return false
}

// SetWallStreetTargetPrice gets a reference to the given float64 and assigns it to the WallStreetTargetPrice field.
func (o *FundamentalsHighlights) SetWallStreetTargetPrice(v float64) {
	o.WallStreetTargetPrice = &v
}

// GetBookValue returns the BookValue field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetBookValue() float64 {
	if o == nil || o.BookValue == nil {
		var ret float64
		return ret
	}
	return *o.BookValue
}

// GetBookValueOk returns a tuple with the BookValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetBookValueOk() (*float64, bool) {
	if o == nil || o.BookValue == nil {
		return nil, false
	}
	return o.BookValue, true
}

// HasBookValue returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasBookValue() bool {
	if o != nil && o.BookValue != nil {
		return true
	}

	return false
}

// SetBookValue gets a reference to the given float64 and assigns it to the BookValue field.
func (o *FundamentalsHighlights) SetBookValue(v float64) {
	o.BookValue = &v
}

// GetDividendShare returns the DividendShare field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetDividendShare() float64 {
	if o == nil || o.DividendShare == nil {
		var ret float64
		return ret
	}
	return *o.DividendShare
}

// GetDividendShareOk returns a tuple with the DividendShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetDividendShareOk() (*float64, bool) {
	if o == nil || o.DividendShare == nil {
		return nil, false
	}
	return o.DividendShare, true
}

// HasDividendShare returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasDividendShare() bool {
	if o != nil && o.DividendShare != nil {
		return true
	}

	return false
}

// SetDividendShare gets a reference to the given float64 and assigns it to the DividendShare field.
func (o *FundamentalsHighlights) SetDividendShare(v float64) {
	o.DividendShare = &v
}

// GetDividendYield returns the DividendYield field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetDividendYield() float64 {
	if o == nil || o.DividendYield == nil {
		var ret float64
		return ret
	}
	return *o.DividendYield
}

// GetDividendYieldOk returns a tuple with the DividendYield field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetDividendYieldOk() (*float64, bool) {
	if o == nil || o.DividendYield == nil {
		return nil, false
	}
	return o.DividendYield, true
}

// HasDividendYield returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasDividendYield() bool {
	if o != nil && o.DividendYield != nil {
		return true
	}

	return false
}

// SetDividendYield gets a reference to the given float64 and assigns it to the DividendYield field.
func (o *FundamentalsHighlights) SetDividendYield(v float64) {
	o.DividendYield = &v
}

// GetEarningsShare returns the EarningsShare field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetEarningsShare() float64 {
	if o == nil || o.EarningsShare == nil {
		var ret float64
		return ret
	}
	return *o.EarningsShare
}

// GetEarningsShareOk returns a tuple with the EarningsShare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetEarningsShareOk() (*float64, bool) {
	if o == nil || o.EarningsShare == nil {
		return nil, false
	}
	return o.EarningsShare, true
}

// HasEarningsShare returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasEarningsShare() bool {
	if o != nil && o.EarningsShare != nil {
		return true
	}

	return false
}

// SetEarningsShare gets a reference to the given float64 and assigns it to the EarningsShare field.
func (o *FundamentalsHighlights) SetEarningsShare(v float64) {
	o.EarningsShare = &v
}

// GetEPSEstimateCurrentYear returns the EPSEstimateCurrentYear field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetEPSEstimateCurrentYear() float64 {
	if o == nil || o.EPSEstimateCurrentYear == nil {
		var ret float64
		return ret
	}
	return *o.EPSEstimateCurrentYear
}

// GetEPSEstimateCurrentYearOk returns a tuple with the EPSEstimateCurrentYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetEPSEstimateCurrentYearOk() (*float64, bool) {
	if o == nil || o.EPSEstimateCurrentYear == nil {
		return nil, false
	}
	return o.EPSEstimateCurrentYear, true
}

// HasEPSEstimateCurrentYear returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasEPSEstimateCurrentYear() bool {
	if o != nil && o.EPSEstimateCurrentYear != nil {
		return true
	}

	return false
}

// SetEPSEstimateCurrentYear gets a reference to the given float64 and assigns it to the EPSEstimateCurrentYear field.
func (o *FundamentalsHighlights) SetEPSEstimateCurrentYear(v float64) {
	o.EPSEstimateCurrentYear = &v
}

// GetEPSEstimateNextYear returns the EPSEstimateNextYear field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetEPSEstimateNextYear() float64 {
	if o == nil || o.EPSEstimateNextYear == nil {
		var ret float64
		return ret
	}
	return *o.EPSEstimateNextYear
}

// GetEPSEstimateNextYearOk returns a tuple with the EPSEstimateNextYear field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetEPSEstimateNextYearOk() (*float64, bool) {
	if o == nil || o.EPSEstimateNextYear == nil {
		return nil, false
	}
	return o.EPSEstimateNextYear, true
}

// HasEPSEstimateNextYear returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasEPSEstimateNextYear() bool {
	if o != nil && o.EPSEstimateNextYear != nil {
		return true
	}

	return false
}

// SetEPSEstimateNextYear gets a reference to the given float64 and assigns it to the EPSEstimateNextYear field.
func (o *FundamentalsHighlights) SetEPSEstimateNextYear(v float64) {
	o.EPSEstimateNextYear = &v
}

// GetEPSEstimateNextQuarter returns the EPSEstimateNextQuarter field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetEPSEstimateNextQuarter() float64 {
	if o == nil || o.EPSEstimateNextQuarter == nil {
		var ret float64
		return ret
	}
	return *o.EPSEstimateNextQuarter
}

// GetEPSEstimateNextQuarterOk returns a tuple with the EPSEstimateNextQuarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetEPSEstimateNextQuarterOk() (*float64, bool) {
	if o == nil || o.EPSEstimateNextQuarter == nil {
		return nil, false
	}
	return o.EPSEstimateNextQuarter, true
}

// HasEPSEstimateNextQuarter returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasEPSEstimateNextQuarter() bool {
	if o != nil && o.EPSEstimateNextQuarter != nil {
		return true
	}

	return false
}

// SetEPSEstimateNextQuarter gets a reference to the given float64 and assigns it to the EPSEstimateNextQuarter field.
func (o *FundamentalsHighlights) SetEPSEstimateNextQuarter(v float64) {
	o.EPSEstimateNextQuarter = &v
}

// GetEPSEstimateCurrentQuarter returns the EPSEstimateCurrentQuarter field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetEPSEstimateCurrentQuarter() float64 {
	if o == nil || o.EPSEstimateCurrentQuarter == nil {
		var ret float64
		return ret
	}
	return *o.EPSEstimateCurrentQuarter
}

// GetEPSEstimateCurrentQuarterOk returns a tuple with the EPSEstimateCurrentQuarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetEPSEstimateCurrentQuarterOk() (*float64, bool) {
	if o == nil || o.EPSEstimateCurrentQuarter == nil {
		return nil, false
	}
	return o.EPSEstimateCurrentQuarter, true
}

// HasEPSEstimateCurrentQuarter returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasEPSEstimateCurrentQuarter() bool {
	if o != nil && o.EPSEstimateCurrentQuarter != nil {
		return true
	}

	return false
}

// SetEPSEstimateCurrentQuarter gets a reference to the given float64 and assigns it to the EPSEstimateCurrentQuarter field.
func (o *FundamentalsHighlights) SetEPSEstimateCurrentQuarter(v float64) {
	o.EPSEstimateCurrentQuarter = &v
}

// GetMostRecentQuarter returns the MostRecentQuarter field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetMostRecentQuarter() string {
	if o == nil || o.MostRecentQuarter == nil {
		var ret string
		return ret
	}
	return *o.MostRecentQuarter
}

// GetMostRecentQuarterOk returns a tuple with the MostRecentQuarter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetMostRecentQuarterOk() (*string, bool) {
	if o == nil || o.MostRecentQuarter == nil {
		return nil, false
	}
	return o.MostRecentQuarter, true
}

// HasMostRecentQuarter returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasMostRecentQuarter() bool {
	if o != nil && o.MostRecentQuarter != nil {
		return true
	}

	return false
}

// SetMostRecentQuarter gets a reference to the given string and assigns it to the MostRecentQuarter field.
func (o *FundamentalsHighlights) SetMostRecentQuarter(v string) {
	o.MostRecentQuarter = &v
}

// GetProfitMargin returns the ProfitMargin field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetProfitMargin() float64 {
	if o == nil || o.ProfitMargin == nil {
		var ret float64
		return ret
	}
	return *o.ProfitMargin
}

// GetProfitMarginOk returns a tuple with the ProfitMargin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetProfitMarginOk() (*float64, bool) {
	if o == nil || o.ProfitMargin == nil {
		return nil, false
	}
	return o.ProfitMargin, true
}

// HasProfitMargin returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasProfitMargin() bool {
	if o != nil && o.ProfitMargin != nil {
		return true
	}

	return false
}

// SetProfitMargin gets a reference to the given float64 and assigns it to the ProfitMargin field.
func (o *FundamentalsHighlights) SetProfitMargin(v float64) {
	o.ProfitMargin = &v
}

// GetOperatingMarginTTM returns the OperatingMarginTTM field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetOperatingMarginTTM() float64 {
	if o == nil || o.OperatingMarginTTM == nil {
		var ret float64
		return ret
	}
	return *o.OperatingMarginTTM
}

// GetOperatingMarginTTMOk returns a tuple with the OperatingMarginTTM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetOperatingMarginTTMOk() (*float64, bool) {
	if o == nil || o.OperatingMarginTTM == nil {
		return nil, false
	}
	return o.OperatingMarginTTM, true
}

// HasOperatingMarginTTM returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasOperatingMarginTTM() bool {
	if o != nil && o.OperatingMarginTTM != nil {
		return true
	}

	return false
}

// SetOperatingMarginTTM gets a reference to the given float64 and assigns it to the OperatingMarginTTM field.
func (o *FundamentalsHighlights) SetOperatingMarginTTM(v float64) {
	o.OperatingMarginTTM = &v
}

// GetReturnOnAssetsTTM returns the ReturnOnAssetsTTM field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetReturnOnAssetsTTM() float64 {
	if o == nil || o.ReturnOnAssetsTTM == nil {
		var ret float64
		return ret
	}
	return *o.ReturnOnAssetsTTM
}

// GetReturnOnAssetsTTMOk returns a tuple with the ReturnOnAssetsTTM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetReturnOnAssetsTTMOk() (*float64, bool) {
	if o == nil || o.ReturnOnAssetsTTM == nil {
		return nil, false
	}
	return o.ReturnOnAssetsTTM, true
}

// HasReturnOnAssetsTTM returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasReturnOnAssetsTTM() bool {
	if o != nil && o.ReturnOnAssetsTTM != nil {
		return true
	}

	return false
}

// SetReturnOnAssetsTTM gets a reference to the given float64 and assigns it to the ReturnOnAssetsTTM field.
func (o *FundamentalsHighlights) SetReturnOnAssetsTTM(v float64) {
	o.ReturnOnAssetsTTM = &v
}

// GetReturnOnEquityTTM returns the ReturnOnEquityTTM field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetReturnOnEquityTTM() float64 {
	if o == nil || o.ReturnOnEquityTTM == nil {
		var ret float64
		return ret
	}
	return *o.ReturnOnEquityTTM
}

// GetReturnOnEquityTTMOk returns a tuple with the ReturnOnEquityTTM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetReturnOnEquityTTMOk() (*float64, bool) {
	if o == nil || o.ReturnOnEquityTTM == nil {
		return nil, false
	}
	return o.ReturnOnEquityTTM, true
}

// HasReturnOnEquityTTM returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasReturnOnEquityTTM() bool {
	if o != nil && o.ReturnOnEquityTTM != nil {
		return true
	}

	return false
}

// SetReturnOnEquityTTM gets a reference to the given float64 and assigns it to the ReturnOnEquityTTM field.
func (o *FundamentalsHighlights) SetReturnOnEquityTTM(v float64) {
	o.ReturnOnEquityTTM = &v
}

// GetRevenueTTM returns the RevenueTTM field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetRevenueTTM() float64 {
	if o == nil || o.RevenueTTM == nil {
		var ret float64
		return ret
	}
	return *o.RevenueTTM
}

// GetRevenueTTMOk returns a tuple with the RevenueTTM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetRevenueTTMOk() (*float64, bool) {
	if o == nil || o.RevenueTTM == nil {
		return nil, false
	}
	return o.RevenueTTM, true
}

// HasRevenueTTM returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasRevenueTTM() bool {
	if o != nil && o.RevenueTTM != nil {
		return true
	}

	return false
}

// SetRevenueTTM gets a reference to the given float64 and assigns it to the RevenueTTM field.
func (o *FundamentalsHighlights) SetRevenueTTM(v float64) {
	o.RevenueTTM = &v
}

// GetRevenuePerShareTTM returns the RevenuePerShareTTM field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetRevenuePerShareTTM() float64 {
	if o == nil || o.RevenuePerShareTTM == nil {
		var ret float64
		return ret
	}
	return *o.RevenuePerShareTTM
}

// GetRevenuePerShareTTMOk returns a tuple with the RevenuePerShareTTM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetRevenuePerShareTTMOk() (*float64, bool) {
	if o == nil || o.RevenuePerShareTTM == nil {
		return nil, false
	}
	return o.RevenuePerShareTTM, true
}

// HasRevenuePerShareTTM returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasRevenuePerShareTTM() bool {
	if o != nil && o.RevenuePerShareTTM != nil {
		return true
	}

	return false
}

// SetRevenuePerShareTTM gets a reference to the given float64 and assigns it to the RevenuePerShareTTM field.
func (o *FundamentalsHighlights) SetRevenuePerShareTTM(v float64) {
	o.RevenuePerShareTTM = &v
}

// GetQuarterlyRevenueGrowthYOY returns the QuarterlyRevenueGrowthYOY field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetQuarterlyRevenueGrowthYOY() float64 {
	if o == nil || o.QuarterlyRevenueGrowthYOY == nil {
		var ret float64
		return ret
	}
	return *o.QuarterlyRevenueGrowthYOY
}

// GetQuarterlyRevenueGrowthYOYOk returns a tuple with the QuarterlyRevenueGrowthYOY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetQuarterlyRevenueGrowthYOYOk() (*float64, bool) {
	if o == nil || o.QuarterlyRevenueGrowthYOY == nil {
		return nil, false
	}
	return o.QuarterlyRevenueGrowthYOY, true
}

// HasQuarterlyRevenueGrowthYOY returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasQuarterlyRevenueGrowthYOY() bool {
	if o != nil && o.QuarterlyRevenueGrowthYOY != nil {
		return true
	}

	return false
}

// SetQuarterlyRevenueGrowthYOY gets a reference to the given float64 and assigns it to the QuarterlyRevenueGrowthYOY field.
func (o *FundamentalsHighlights) SetQuarterlyRevenueGrowthYOY(v float64) {
	o.QuarterlyRevenueGrowthYOY = &v
}

// GetGrossProfitTTM returns the GrossProfitTTM field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetGrossProfitTTM() float64 {
	if o == nil || o.GrossProfitTTM == nil {
		var ret float64
		return ret
	}
	return *o.GrossProfitTTM
}

// GetGrossProfitTTMOk returns a tuple with the GrossProfitTTM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetGrossProfitTTMOk() (*float64, bool) {
	if o == nil || o.GrossProfitTTM == nil {
		return nil, false
	}
	return o.GrossProfitTTM, true
}

// HasGrossProfitTTM returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasGrossProfitTTM() bool {
	if o != nil && o.GrossProfitTTM != nil {
		return true
	}

	return false
}

// SetGrossProfitTTM gets a reference to the given float64 and assigns it to the GrossProfitTTM field.
func (o *FundamentalsHighlights) SetGrossProfitTTM(v float64) {
	o.GrossProfitTTM = &v
}

// GetDilutedEpsTTM returns the DilutedEpsTTM field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetDilutedEpsTTM() float64 {
	if o == nil || o.DilutedEpsTTM == nil {
		var ret float64
		return ret
	}
	return *o.DilutedEpsTTM
}

// GetDilutedEpsTTMOk returns a tuple with the DilutedEpsTTM field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetDilutedEpsTTMOk() (*float64, bool) {
	if o == nil || o.DilutedEpsTTM == nil {
		return nil, false
	}
	return o.DilutedEpsTTM, true
}

// HasDilutedEpsTTM returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasDilutedEpsTTM() bool {
	if o != nil && o.DilutedEpsTTM != nil {
		return true
	}

	return false
}

// SetDilutedEpsTTM gets a reference to the given float64 and assigns it to the DilutedEpsTTM field.
func (o *FundamentalsHighlights) SetDilutedEpsTTM(v float64) {
	o.DilutedEpsTTM = &v
}

// GetQuarterlyEarningsGrowthYOY returns the QuarterlyEarningsGrowthYOY field value if set, zero value otherwise.
func (o *FundamentalsHighlights) GetQuarterlyEarningsGrowthYOY() float64 {
	if o == nil || o.QuarterlyEarningsGrowthYOY == nil {
		var ret float64
		return ret
	}
	return *o.QuarterlyEarningsGrowthYOY
}

// GetQuarterlyEarningsGrowthYOYOk returns a tuple with the QuarterlyEarningsGrowthYOY field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FundamentalsHighlights) GetQuarterlyEarningsGrowthYOYOk() (*float64, bool) {
	if o == nil || o.QuarterlyEarningsGrowthYOY == nil {
		return nil, false
	}
	return o.QuarterlyEarningsGrowthYOY, true
}

// HasQuarterlyEarningsGrowthYOY returns a boolean if a field has been set.
func (o *FundamentalsHighlights) HasQuarterlyEarningsGrowthYOY() bool {
	if o != nil && o.QuarterlyEarningsGrowthYOY != nil {
		return true
	}

	return false
}

// SetQuarterlyEarningsGrowthYOY gets a reference to the given float64 and assigns it to the QuarterlyEarningsGrowthYOY field.
func (o *FundamentalsHighlights) SetQuarterlyEarningsGrowthYOY(v float64) {
	o.QuarterlyEarningsGrowthYOY = &v
}

func (o FundamentalsHighlights) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.MarketCapitalization != nil {
		toSerialize["MarketCapitalization"] = o.MarketCapitalization
	}
	if o.MarketCapitalizationMln != nil {
		toSerialize["MarketCapitalizationMln"] = o.MarketCapitalizationMln
	}
	if o.EBITDA != nil {
		toSerialize["EBITDA"] = o.EBITDA
	}
	if o.PERatio != nil {
		toSerialize["PERatio"] = o.PERatio
	}
	if o.PEGRatio != nil {
		toSerialize["PEGRatio"] = o.PEGRatio
	}
	if o.WallStreetTargetPrice != nil {
		toSerialize["WallStreetTargetPrice"] = o.WallStreetTargetPrice
	}
	if o.BookValue != nil {
		toSerialize["BookValue"] = o.BookValue
	}
	if o.DividendShare != nil {
		toSerialize["DividendShare"] = o.DividendShare
	}
	if o.DividendYield != nil {
		toSerialize["DividendYield"] = o.DividendYield
	}
	if o.EarningsShare != nil {
		toSerialize["EarningsShare"] = o.EarningsShare
	}
	if o.EPSEstimateCurrentYear != nil {
		toSerialize["EPSEstimateCurrentYear"] = o.EPSEstimateCurrentYear
	}
	if o.EPSEstimateNextYear != nil {
		toSerialize["EPSEstimateNextYear"] = o.EPSEstimateNextYear
	}
	if o.EPSEstimateNextQuarter != nil {
		toSerialize["EPSEstimateNextQuarter"] = o.EPSEstimateNextQuarter
	}
	if o.EPSEstimateCurrentQuarter != nil {
		toSerialize["EPSEstimateCurrentQuarter"] = o.EPSEstimateCurrentQuarter
	}
	if o.MostRecentQuarter != nil {
		toSerialize["MostRecentQuarter"] = o.MostRecentQuarter
	}
	if o.ProfitMargin != nil {
		toSerialize["ProfitMargin"] = o.ProfitMargin
	}
	if o.OperatingMarginTTM != nil {
		toSerialize["OperatingMarginTTM"] = o.OperatingMarginTTM
	}
	if o.ReturnOnAssetsTTM != nil {
		toSerialize["ReturnOnAssetsTTM"] = o.ReturnOnAssetsTTM
	}
	if o.ReturnOnEquityTTM != nil {
		toSerialize["ReturnOnEquityTTM"] = o.ReturnOnEquityTTM
	}
	if o.RevenueTTM != nil {
		toSerialize["RevenueTTM"] = o.RevenueTTM
	}
	if o.RevenuePerShareTTM != nil {
		toSerialize["RevenuePerShareTTM"] = o.RevenuePerShareTTM
	}
	if o.QuarterlyRevenueGrowthYOY != nil {
		toSerialize["QuarterlyRevenueGrowthYOY"] = o.QuarterlyRevenueGrowthYOY
	}
	if o.GrossProfitTTM != nil {
		toSerialize["GrossProfitTTM"] = o.GrossProfitTTM
	}
	if o.DilutedEpsTTM != nil {
		toSerialize["DilutedEpsTTM"] = o.DilutedEpsTTM
	}
	if o.QuarterlyEarningsGrowthYOY != nil {
		toSerialize["QuarterlyEarningsGrowthYOY"] = o.QuarterlyEarningsGrowthYOY
	}
	return json.Marshal(toSerialize)
}

type NullableFundamentalsHighlights struct {
	value *FundamentalsHighlights
	isSet bool
}

func (v NullableFundamentalsHighlights) Get() *FundamentalsHighlights {
	return v.value
}

func (v *NullableFundamentalsHighlights) Set(val *FundamentalsHighlights) {
	v.value = val
	v.isSet = true
}

func (v NullableFundamentalsHighlights) IsSet() bool {
	return v.isSet
}

func (v *NullableFundamentalsHighlights) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFundamentalsHighlights(val *FundamentalsHighlights) *NullableFundamentalsHighlights {
	return &NullableFundamentalsHighlights{value: val, isSet: true}
}

func (v NullableFundamentalsHighlights) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFundamentalsHighlights) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
