/*
 * eodhistoricaldata
 *
 * eodhistoricaldata API
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BondFundamentalsIssueData struct for BondFundamentalsIssueData
type BondFundamentalsIssueData struct {
	IssueDate              *string `json:"IssueDate,omitempty"`
	OfferingDate           *string `json:"OfferingDate,omitempty"`
	FirstCouponDate        *string `json:"FirstCouponDate,omitempty"`
	FirstTradingDay        *string `json:"FirstTradingDay,omitempty"`
	CouponPaymentFrequency *string `json:"CouponPaymentFrequency,omitempty"`
	Issuer                 *string `json:"Issuer,omitempty"`
	IssuerDescription      *string `json:"IssuerDescription,omitempty"`
	IssuerCountry          *string `json:"IssuerCountry,omitempty"`
	IssuerURL              *string `json:"IssuerURL,omitempty"`
}

// NewBondFundamentalsIssueData instantiates a new BondFundamentalsIssueData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBondFundamentalsIssueData() *BondFundamentalsIssueData {
	this := BondFundamentalsIssueData{}
	return &this
}

// NewBondFundamentalsIssueDataWithDefaults instantiates a new BondFundamentalsIssueData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBondFundamentalsIssueDataWithDefaults() *BondFundamentalsIssueData {
	this := BondFundamentalsIssueData{}
	return &this
}

// GetIssueDate returns the IssueDate field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetIssueDate() string {
	if o == nil || o.IssueDate == nil {
		var ret string
		return ret
	}
	return *o.IssueDate
}

// GetIssueDateOk returns a tuple with the IssueDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetIssueDateOk() (*string, bool) {
	if o == nil || o.IssueDate == nil {
		return nil, false
	}
	return o.IssueDate, true
}

// HasIssueDate returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasIssueDate() bool {
	if o != nil && o.IssueDate != nil {
		return true
	}

	return false
}

// SetIssueDate gets a reference to the given string and assigns it to the IssueDate field.
func (o *BondFundamentalsIssueData) SetIssueDate(v string) {
	o.IssueDate = &v
}

// GetOfferingDate returns the OfferingDate field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetOfferingDate() string {
	if o == nil || o.OfferingDate == nil {
		var ret string
		return ret
	}
	return *o.OfferingDate
}

// GetOfferingDateOk returns a tuple with the OfferingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetOfferingDateOk() (*string, bool) {
	if o == nil || o.OfferingDate == nil {
		return nil, false
	}
	return o.OfferingDate, true
}

// HasOfferingDate returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasOfferingDate() bool {
	if o != nil && o.OfferingDate != nil {
		return true
	}

	return false
}

// SetOfferingDate gets a reference to the given string and assigns it to the OfferingDate field.
func (o *BondFundamentalsIssueData) SetOfferingDate(v string) {
	o.OfferingDate = &v
}

// GetFirstCouponDate returns the FirstCouponDate field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetFirstCouponDate() string {
	if o == nil || o.FirstCouponDate == nil {
		var ret string
		return ret
	}
	return *o.FirstCouponDate
}

// GetFirstCouponDateOk returns a tuple with the FirstCouponDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetFirstCouponDateOk() (*string, bool) {
	if o == nil || o.FirstCouponDate == nil {
		return nil, false
	}
	return o.FirstCouponDate, true
}

// HasFirstCouponDate returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasFirstCouponDate() bool {
	if o != nil && o.FirstCouponDate != nil {
		return true
	}

	return false
}

// SetFirstCouponDate gets a reference to the given string and assigns it to the FirstCouponDate field.
func (o *BondFundamentalsIssueData) SetFirstCouponDate(v string) {
	o.FirstCouponDate = &v
}

// GetFirstTradingDay returns the FirstTradingDay field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetFirstTradingDay() string {
	if o == nil || o.FirstTradingDay == nil {
		var ret string
		return ret
	}
	return *o.FirstTradingDay
}

// GetFirstTradingDayOk returns a tuple with the FirstTradingDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetFirstTradingDayOk() (*string, bool) {
	if o == nil || o.FirstTradingDay == nil {
		return nil, false
	}
	return o.FirstTradingDay, true
}

// HasFirstTradingDay returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasFirstTradingDay() bool {
	if o != nil && o.FirstTradingDay != nil {
		return true
	}

	return false
}

// SetFirstTradingDay gets a reference to the given string and assigns it to the FirstTradingDay field.
func (o *BondFundamentalsIssueData) SetFirstTradingDay(v string) {
	o.FirstTradingDay = &v
}

// GetCouponPaymentFrequency returns the CouponPaymentFrequency field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetCouponPaymentFrequency() string {
	if o == nil || o.CouponPaymentFrequency == nil {
		var ret string
		return ret
	}
	return *o.CouponPaymentFrequency
}

// GetCouponPaymentFrequencyOk returns a tuple with the CouponPaymentFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetCouponPaymentFrequencyOk() (*string, bool) {
	if o == nil || o.CouponPaymentFrequency == nil {
		return nil, false
	}
	return o.CouponPaymentFrequency, true
}

// HasCouponPaymentFrequency returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasCouponPaymentFrequency() bool {
	if o != nil && o.CouponPaymentFrequency != nil {
		return true
	}

	return false
}

// SetCouponPaymentFrequency gets a reference to the given string and assigns it to the CouponPaymentFrequency field.
func (o *BondFundamentalsIssueData) SetCouponPaymentFrequency(v string) {
	o.CouponPaymentFrequency = &v
}

// GetIssuer returns the Issuer field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetIssuer() string {
	if o == nil || o.Issuer == nil {
		var ret string
		return ret
	}
	return *o.Issuer
}

// GetIssuerOk returns a tuple with the Issuer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetIssuerOk() (*string, bool) {
	if o == nil || o.Issuer == nil {
		return nil, false
	}
	return o.Issuer, true
}

// HasIssuer returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasIssuer() bool {
	if o != nil && o.Issuer != nil {
		return true
	}

	return false
}

// SetIssuer gets a reference to the given string and assigns it to the Issuer field.
func (o *BondFundamentalsIssueData) SetIssuer(v string) {
	o.Issuer = &v
}

// GetIssuerDescription returns the IssuerDescription field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetIssuerDescription() string {
	if o == nil || o.IssuerDescription == nil {
		var ret string
		return ret
	}
	return *o.IssuerDescription
}

// GetIssuerDescriptionOk returns a tuple with the IssuerDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetIssuerDescriptionOk() (*string, bool) {
	if o == nil || o.IssuerDescription == nil {
		return nil, false
	}
	return o.IssuerDescription, true
}

// HasIssuerDescription returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasIssuerDescription() bool {
	if o != nil && o.IssuerDescription != nil {
		return true
	}

	return false
}

// SetIssuerDescription gets a reference to the given string and assigns it to the IssuerDescription field.
func (o *BondFundamentalsIssueData) SetIssuerDescription(v string) {
	o.IssuerDescription = &v
}

// GetIssuerCountry returns the IssuerCountry field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetIssuerCountry() string {
	if o == nil || o.IssuerCountry == nil {
		var ret string
		return ret
	}
	return *o.IssuerCountry
}

// GetIssuerCountryOk returns a tuple with the IssuerCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetIssuerCountryOk() (*string, bool) {
	if o == nil || o.IssuerCountry == nil {
		return nil, false
	}
	return o.IssuerCountry, true
}

// HasIssuerCountry returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasIssuerCountry() bool {
	if o != nil && o.IssuerCountry != nil {
		return true
	}

	return false
}

// SetIssuerCountry gets a reference to the given string and assigns it to the IssuerCountry field.
func (o *BondFundamentalsIssueData) SetIssuerCountry(v string) {
	o.IssuerCountry = &v
}

// GetIssuerURL returns the IssuerURL field value if set, zero value otherwise.
func (o *BondFundamentalsIssueData) GetIssuerURL() string {
	if o == nil || o.IssuerURL == nil {
		var ret string
		return ret
	}
	return *o.IssuerURL
}

// GetIssuerURLOk returns a tuple with the IssuerURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BondFundamentalsIssueData) GetIssuerURLOk() (*string, bool) {
	if o == nil || o.IssuerURL == nil {
		return nil, false
	}
	return o.IssuerURL, true
}

// HasIssuerURL returns a boolean if a field has been set.
func (o *BondFundamentalsIssueData) HasIssuerURL() bool {
	if o != nil && o.IssuerURL != nil {
		return true
	}

	return false
}

// SetIssuerURL gets a reference to the given string and assigns it to the IssuerURL field.
func (o *BondFundamentalsIssueData) SetIssuerURL(v string) {
	o.IssuerURL = &v
}

func (o BondFundamentalsIssueData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IssueDate != nil {
		toSerialize["IssueDate"] = o.IssueDate
	}
	if o.OfferingDate != nil {
		toSerialize["OfferingDate"] = o.OfferingDate
	}
	if o.FirstCouponDate != nil {
		toSerialize["FirstCouponDate"] = o.FirstCouponDate
	}
	if o.FirstTradingDay != nil {
		toSerialize["FirstTradingDay"] = o.FirstTradingDay
	}
	if o.CouponPaymentFrequency != nil {
		toSerialize["CouponPaymentFrequency"] = o.CouponPaymentFrequency
	}
	if o.Issuer != nil {
		toSerialize["Issuer"] = o.Issuer
	}
	if o.IssuerDescription != nil {
		toSerialize["IssuerDescription"] = o.IssuerDescription
	}
	if o.IssuerCountry != nil {
		toSerialize["IssuerCountry"] = o.IssuerCountry
	}
	if o.IssuerURL != nil {
		toSerialize["IssuerURL"] = o.IssuerURL
	}
	return json.Marshal(toSerialize)
}

type NullableBondFundamentalsIssueData struct {
	value *BondFundamentalsIssueData
	isSet bool
}

func (v NullableBondFundamentalsIssueData) Get() *BondFundamentalsIssueData {
	return v.value
}

func (v *NullableBondFundamentalsIssueData) Set(val *BondFundamentalsIssueData) {
	v.value = val
	v.isSet = true
}

func (v NullableBondFundamentalsIssueData) IsSet() bool {
	return v.isSet
}

func (v *NullableBondFundamentalsIssueData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBondFundamentalsIssueData(val *BondFundamentalsIssueData) *NullableBondFundamentalsIssueData {
	return &NullableBondFundamentalsIssueData{value: val, isSet: true}
}

func (v NullableBondFundamentalsIssueData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBondFundamentalsIssueData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
